{"version":3,"file":"main-D51zBycD.js","sources":["../../../src/services/api.ts","../../../src/composables/useErrorHandler.ts","../../../src/composables/useGeneration.ts","../../../src/composables/useApi.ts","../../../src/composables/useFormValidation.ts","../../../src/main.ts","../../../src/App.vue"],"sourcesContent":["import type { GenerationRequest, GenerationResponse } from \"../types/api\";\n\nconst API_BASE_URL =\n  import.meta.env.VITE_API_BASE_URL ||\n  (import.meta.env.PROD ? \"\" : \"http://localhost:3001\");\n\nexport class APIError extends Error {\n  constructor(\n    message: string,\n    public statusCode?: number,\n    public response?: any\n  ) {\n    super(message);\n    this.name = \"APIError\";\n  }\n}\n\nexport class NetworkError extends APIError {\n  constructor(message: string = \"Network connection failed\") {\n    super(message);\n    this.name = \"NetworkError\";\n  }\n}\n\nexport class TimeoutError extends APIError {\n  constructor(message: string = \"Request timeout\") {\n    super(message);\n    this.name = \"TimeoutError\";\n  }\n}\n\ninterface RequestInterceptor {\n  (request: RequestInit): RequestInit | Promise<RequestInit>;\n}\n\ninterface ResponseInterceptor {\n  (response: Response): Response | Promise<Response>;\n}\n\ninterface RetryConfig {\n  maxRetries: number;\n  baseDelay: number;\n  maxDelay: number;\n  retryCondition?: (error: Error) => boolean;\n}\n\nexport class APIService {\n  private baseURL: string;\n  private requestInterceptors: RequestInterceptor[] = [];\n  private responseInterceptors: ResponseInterceptor[] = [];\n  private retryConfig: RetryConfig = {\n    maxRetries: 3,\n    baseDelay: 1000,\n    maxDelay: 10000,\n    retryCondition: (error) => {\n      return (\n        error instanceof NetworkError ||\n        (error instanceof APIError &&\n          error.statusCode !== undefined &&\n          error.statusCode >= 500)\n      );\n    },\n  };\n  private isOnline: boolean = navigator.onLine;\n\n  constructor(baseURL: string = API_BASE_URL) {\n    this.baseURL = baseURL;\n    this.setupOnlineDetection();\n  }\n\n  private setupOnlineDetection(): void {\n    window.addEventListener(\"online\", () => {\n      this.isOnline = true;\n    });\n\n    window.addEventListener(\"offline\", () => {\n      this.isOnline = false;\n    });\n  }\n\n  addRequestInterceptor(interceptor: RequestInterceptor): void {\n    this.requestInterceptors.push(interceptor);\n  }\n\n  addResponseInterceptor(interceptor: ResponseInterceptor): void {\n    this.responseInterceptors.push(interceptor);\n  }\n\n  setRetryConfig(config: Partial<RetryConfig>): void {\n    this.retryConfig = { ...this.retryConfig, ...config };\n  }\n\n  private async applyRequestInterceptors(\n    request: RequestInit\n  ): Promise<RequestInit> {\n    let processedRequest = request;\n    for (const interceptor of this.requestInterceptors) {\n      processedRequest = await interceptor(processedRequest);\n    }\n    return processedRequest;\n  }\n\n  private async applyResponseInterceptors(\n    response: Response\n  ): Promise<Response> {\n    let processedResponse = response;\n    for (const interceptor of this.responseInterceptors) {\n      processedResponse = await interceptor(processedResponse);\n    }\n    return processedResponse;\n  }\n\n  private async sleep(ms: number): Promise<void> {\n    return new Promise((resolve) => setTimeout(resolve, ms));\n  }\n\n  private calculateDelay(attempt: number): number {\n    const delay = this.retryConfig.baseDelay * Math.pow(2, attempt);\n    return Math.min(delay, this.retryConfig.maxDelay);\n  }\n\n  private async fetchWithTimeout(\n    url: string,\n    options: RequestInit,\n    timeout: number = 30000\n  ): Promise<Response> {\n    const controller = new AbortController();\n    const timeoutId = setTimeout(() => controller.abort(), timeout);\n\n    try {\n      const response = await fetch(url, {\n        ...options,\n        signal: controller.signal,\n      });\n      clearTimeout(timeoutId);\n      return response;\n    } catch (error) {\n      clearTimeout(timeoutId);\n      if (error instanceof Error && error.name === \"AbortError\") {\n        throw new TimeoutError();\n      }\n      throw error;\n    }\n  }\n\n  private async makeRequest(\n    url: string,\n    options: RequestInit\n  ): Promise<Response> {\n    // Check online status\n    if (!this.isOnline) {\n      throw new NetworkError(\n        \"Application is offline. Please check your internet connection.\"\n      );\n    }\n\n    // Apply request interceptors\n    const processedOptions = await this.applyRequestInterceptors(options);\n\n    let lastError: Error | null = null;\n\n    for (let attempt = 0; attempt <= this.retryConfig.maxRetries; attempt++) {\n      try {\n        const response = await this.fetchWithTimeout(url, processedOptions);\n\n        // Apply response interceptors\n        const processedResponse =\n          await this.applyResponseInterceptors(response);\n\n        return processedResponse;\n      } catch (error) {\n        lastError = error instanceof Error ? error : new Error(String(error));\n\n        // Don't retry on the last attempt\n        if (attempt === this.retryConfig.maxRetries) {\n          break;\n        }\n\n        // Check if we should retry this error\n        if (!this.retryConfig.retryCondition?.(lastError)) {\n          break;\n        }\n\n        // Wait before retrying with exponential backoff\n        const delay = this.calculateDelay(attempt);\n        await this.sleep(delay);\n      }\n    }\n\n    // Convert fetch errors to our custom error types\n    if (\n      lastError &&\n      lastError instanceof TypeError &&\n      lastError.message.includes(\"fetch\")\n    ) {\n      throw new NetworkError(\"Network error: Unable to connect to the server\");\n    }\n\n    throw lastError || new Error(\"Unknown error occurred\");\n  }\n\n  async generateSVG(request: GenerationRequest): Promise<GenerationResponse> {\n    try {\n      const response = await this.makeRequest(`${this.baseURL}/api/generate`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(request),\n      });\n\n      if (!response.ok) {\n        const errorData = await response.json().catch(() => ({}));\n        throw new APIError(\n          errorData.message ||\n            `HTTP ${response.status}: ${response.statusText}`,\n          response.status,\n          errorData\n        );\n      }\n\n      const data = await response.json();\n      return data;\n    } catch (error) {\n      if (\n        error instanceof APIError ||\n        error instanceof NetworkError ||\n        error instanceof TimeoutError\n      ) {\n        throw error;\n      }\n\n      throw new APIError(\n        error instanceof Error ? error.message : \"An unexpected error occurred\"\n      );\n    }\n  }\n\n  async healthCheck(): Promise<{ status: string; timestamp: string }> {\n    try {\n      const response = await this.makeRequest(`${this.baseURL}/health`, {\n        method: \"GET\",\n      });\n\n      if (!response.ok) {\n        throw new APIError(`Health check failed: ${response.status}`);\n      }\n\n      return await response.json();\n    } catch (error) {\n      if (\n        error instanceof APIError ||\n        error instanceof NetworkError ||\n        error instanceof TimeoutError\n      ) {\n        throw error;\n      }\n\n      throw new APIError(\"Health check failed: Unable to connect to server\");\n    }\n  }\n\n  // Utility methods for checking connection status\n  isOffline(): boolean {\n    return !this.isOnline;\n  }\n\n  async checkConnection(): Promise<boolean> {\n    try {\n      await this.healthCheck();\n      return true;\n    } catch {\n      return false;\n    }\n  }\n}\n\n// Export a default instance\nexport const apiService = new APIService();\n","import { useToast } from \"./useToast\";\nimport { APIError, NetworkError, TimeoutError } from \"../services/api\";\n\nexport interface ErrorContext {\n  component?: string;\n  action?: string;\n  userId?: string;\n  timestamp?: Date;\n  metadata?: Record<string, any>;\n}\n\nexport interface ValidationError {\n  field: string;\n  message: string;\n  code?: string;\n}\n\nexport function useErrorHandler() {\n  const toast = useToast();\n\n  const logError = (error: Error, context?: ErrorContext) => {\n    const errorLog = {\n      message: error.message,\n      stack: error.stack,\n      name: error.name,\n      timestamp: new Date().toISOString(),\n      context,\n    };\n\n    // In production, send to error monitoring service\n    console.error(\"Error logged:\", errorLog);\n\n    // Could integrate with services like Sentry, LogRocket, etc.\n    // Sentry.captureException(error, { contexts: { custom: context } });\n  };\n\n  const handleAPIError = (error: Error, context?: ErrorContext) => {\n    logError(error, context);\n\n    if (error instanceof NetworkError) {\n      toast.error(\n        \"Connection Failed\",\n        \"Unable to connect to the server. Please check your internet connection.\",\n        {\n          actions: [\n            {\n              label: \"Retry\",\n              action: () => {\n                // Retry logic would be handled by the calling component\n                console.log(\"Retry requested\");\n              },\n              style: \"primary\",\n            },\n          ],\n        }\n      );\n    } else if (error instanceof TimeoutError) {\n      toast.error(\n        \"Request Timeout\",\n        \"The request took too long to complete. The server may be busy.\",\n        {\n          actions: [\n            {\n              label: \"Try Again\",\n              action: () => {\n                console.log(\"Retry requested\");\n              },\n              style: \"primary\",\n            },\n          ],\n        }\n      );\n    } else if (error instanceof APIError) {\n      const statusCode = error.statusCode;\n\n      if (statusCode === 400) {\n        toast.error(\n          \"Invalid Request\",\n          \"Please check your input and try again.\"\n        );\n      } else if (statusCode === 401) {\n        toast.error(\"Authentication Required\", \"Please log in to continue.\");\n      } else if (statusCode === 403) {\n        toast.error(\n          \"Access Denied\",\n          \"You don't have permission to perform this action.\"\n        );\n      } else if (statusCode === 404) {\n        toast.error(\"Not Found\", \"The requested resource could not be found.\");\n      } else if (statusCode === 429) {\n        toast.warning(\n          \"Rate Limited\",\n          \"Too many requests. Please wait a moment before trying again.\"\n        );\n      } else if (statusCode && statusCode >= 500) {\n        toast.error(\n          \"Server Error\",\n          \"Something went wrong on our end. Please try again later.\",\n          {\n            actions: [\n              {\n                label: \"Report Issue\",\n                action: () => {\n                  // Open support/feedback form\n                  console.log(\"Report issue requested\");\n                },\n                style: \"secondary\",\n              },\n            ],\n          }\n        );\n      } else {\n        toast.error(\n          \"Request Failed\",\n          error.message || \"An unexpected error occurred.\"\n        );\n      }\n    } else {\n      toast.error(\n        \"Unexpected Error\",\n        \"Something unexpected happened. Please try again.\"\n      );\n    }\n  };\n\n  const handleValidationErrors = (\n    errors: ValidationError[],\n    context?: ErrorContext\n  ) => {\n    logError(\n      new Error(\n        `Validation failed: ${errors.map((e) => e.message).join(\", \")}`\n      ),\n      context\n    );\n\n    if (errors.length === 1) {\n      toast.warning(\"Validation Error\", errors[0].message);\n    } else {\n      toast.warning(\n        \"Multiple Validation Errors\",\n        `Please fix ${errors.length} validation errors and try again.`,\n        {\n          actions: [\n            {\n              label: \"Show Details\",\n              action: () => {\n                // Show detailed validation errors\n                console.log(\"Show validation details:\", errors);\n              },\n              style: \"secondary\",\n            },\n          ],\n        }\n      );\n    }\n  };\n\n  const handleGenerationError = (error: Error, context?: ErrorContext) => {\n    logError(error, { ...context, action: \"svg_generation\" });\n\n    if (error instanceof APIError && error.response?.errors) {\n      // Handle structured generation errors\n      const generationErrors = error.response.errors;\n      toast.error(\"Generation Failed\", generationErrors.join(\". \"), {\n        actions: [\n          {\n            label: \"Try Different Prompt\",\n            action: () => {\n              console.log(\"Suggest prompt changes\");\n            },\n            style: \"primary\",\n          },\n        ],\n      });\n    } else {\n      handleAPIError(error, context);\n    }\n  };\n\n  const handleCopyError = (error: Error, context?: ErrorContext) => {\n    logError(error, { ...context, action: \"copy_to_clipboard\" });\n\n    toast.error(\n      \"Copy Failed\",\n      \"Unable to copy to clipboard. You can manually select and copy the code.\",\n      {\n        actions: [\n          {\n            label: \"Select Text\",\n            action: () => {\n              // Focus and select the text area\n              console.log(\"Select text requested\");\n            },\n            style: \"primary\",\n          },\n        ],\n      }\n    );\n  };\n\n  const handleUnexpectedError = (error: Error, context?: ErrorContext) => {\n    logError(error, { ...context, action: \"unexpected_error\" });\n\n    toast.error(\n      \"Unexpected Error\",\n      \"Something went wrong. The error has been logged and we'll investigate.\",\n      {\n        actions: [\n          {\n            label: \"Reload Page\",\n            action: () => {\n              window.location.reload();\n            },\n            style: \"secondary\",\n          },\n        ],\n      }\n    );\n  };\n\n  const showSuccess = (title: string, message?: string) => {\n    toast.success(title, message);\n  };\n\n  const showWarning = (title: string, message?: string) => {\n    toast.warning(title, message);\n  };\n\n  const showInfo = (title: string, message?: string) => {\n    toast.info(title, message);\n  };\n\n  return {\n    logError,\n    handleAPIError,\n    handleValidationErrors,\n    handleGenerationError,\n    handleCopyError,\n    handleUnexpectedError,\n    showSuccess,\n    showWarning,\n    showInfo,\n  };\n}\n","import { ref, reactive, computed, watch } from \"vue\";\nimport type {\n  GenerationRequest,\n  GenerationResponse,\n  SizeConfig,\n} from \"../types/api\";\nimport { useApi } from \"./useApi\";\nimport { useErrorHandler } from \"./useErrorHandler\";\nimport { useFormValidation } from \"./useFormValidation\";\nimport { InputSanitizer } from \"../utils/inputSanitizer\";\nimport { debounce } from \"../utils/debounce\";\nimport { performanceMonitor } from \"../utils/performance\";\n\nexport function useGeneration() {\n  // Use API composable for network operations\n  const api = useApi();\n  const errorHandler = useErrorHandler();\n  const validation = useFormValidation();\n\n  // Reactive state\n  const generationParams = reactive<{\n    prompt: string;\n    size: SizeConfig;\n    palette?: string[];\n    seed?: number;\n  }>({\n    prompt: \"\",\n    size: {\n      preset: \"icon\",\n      width: 64,\n      height: 64,\n    },\n  });\n\n  const generationResult = ref<GenerationResponse | null>(null);\n\n  // Size presets\n  const sizePresets = [\n    { name: \"icon\", label: \"Icon\", width: 64, height: 64 },\n    { name: \"banner\", label: \"Banner\", width: 400, height: 100 },\n    { name: \"square\", label: \"Square\", width: 200, height: 200 },\n    { name: \"custom\", label: \"Custom\", width: 100, height: 100 },\n  ] as const;\n\n  // Computed properties\n  const canGenerate = computed(() => {\n    return (\n      generationParams.prompt.trim().length > 0 &&\n      generationParams.size.width >= 16 &&\n      generationParams.size.width <= 2048 &&\n      generationParams.size.height >= 16 &&\n      generationParams.size.height <= 2048 &&\n      !api.isLoading.value &&\n      api.isOnline.value\n    );\n  });\n\n  // Methods\n  const setSizePreset = (preset: (typeof sizePresets)[number]) => {\n    generationParams.size.preset = preset.name;\n    if (preset.name !== \"custom\") {\n      generationParams.size.width = preset.width;\n      generationParams.size.height = preset.height;\n    }\n  };\n\n  // Initialize form validation\n  validation.registerField(\"prompt\", {\n    isValid: false,\n    message: \"Prompt is required\",\n  });\n  validation.registerField(\"width\", { isValid: true });\n  validation.registerField(\"height\", { isValid: true });\n\n  // Debounced input sanitization to avoid excessive processing\n  const debouncedSanitization = debounce((newPrompt: string) => {\n    if (newPrompt) {\n      performanceMonitor.start(\"input-sanitization\");\n\n      const sanitizationResult = InputSanitizer.sanitizePrompt(newPrompt);\n\n      if (sanitizationResult.wasModified) {\n        generationParams.prompt = sanitizationResult.sanitized;\n\n        // Show warnings for sanitization\n        sanitizationResult.warnings.forEach((warning) => {\n          errorHandler.showWarning(\"Input Modified\", warning);\n        });\n      }\n\n      // Check for suspicious input\n      if (InputSanitizer.isSuspiciousInput(newPrompt)) {\n        errorHandler.showWarning(\n          \"Suspicious Input Detected\",\n          \"Your input contains potentially unsafe content that has been removed.\"\n        );\n      }\n\n      performanceMonitor.end(\"input-sanitization\");\n    }\n  }, 300); // 300ms debounce\n\n  // Watch for prompt changes and sanitize input\n  watch(() => generationParams.prompt, debouncedSanitization);\n\n  const validateInput = () => {\n    // Sanitize and validate prompt\n    const promptResult = InputSanitizer.sanitizePrompt(generationParams.prompt);\n    const prompt = promptResult.sanitized;\n\n    // Sanitize and validate dimensions\n    const widthResult = InputSanitizer.sanitizeNumber(\n      generationParams.size.width,\n      16,\n      2048,\n      64\n    );\n    const heightResult = InputSanitizer.sanitizeNumber(\n      generationParams.size.height,\n      16,\n      2048,\n      64\n    );\n\n    // Update values if they were sanitized\n    if (widthResult.wasModified) {\n      generationParams.size.width = widthResult.value;\n      widthResult.warnings.forEach((warning) => {\n        errorHandler.showWarning(\"Width Adjusted\", warning);\n      });\n    }\n\n    if (heightResult.wasModified) {\n      generationParams.size.height = heightResult.value;\n      heightResult.warnings.forEach((warning) => {\n        errorHandler.showWarning(\"Height Adjusted\", warning);\n      });\n    }\n\n    // Validate prompt\n    validation.updateFieldValidation(\n      \"prompt\",\n      prompt.length > 0 && prompt.length <= 500,\n      prompt.length === 0\n        ? \"Prompt is required\"\n        : prompt.length > 500\n          ? \"Prompt must be 500 characters or less\"\n          : undefined\n    );\n\n    // Validate dimensions\n    validation.updateFieldValidation(\n      \"width\",\n      widthResult.value >= 16 && widthResult.value <= 2048,\n      widthResult.value < 16 || widthResult.value > 2048\n        ? \"Width must be between 16 and 2048 pixels\"\n        : undefined\n    );\n\n    validation.updateFieldValidation(\n      \"height\",\n      heightResult.value >= 16 && heightResult.value <= 2048,\n      heightResult.value < 16 || heightResult.value > 2048\n        ? \"Height must be between 16 and 2048 pixels\"\n        : undefined\n    );\n\n    return validation.isFormValid.value;\n  };\n\n  const generateSVG = async () => {\n    performanceMonitor.start(\"svg-generation\", {\n      promptLength: generationParams.prompt.length,\n      size: `${generationParams.size.width}x${generationParams.size.height}`,\n    });\n\n    try {\n      if (!validateInput()) {\n        errorHandler.handleValidationErrors(validation.validationErrors.value, {\n          component: \"useGeneration\",\n          action: \"generateSVG\",\n        });\n        return;\n      }\n\n      if (!canGenerate.value) return;\n\n      const request: GenerationRequest = {\n        prompt: generationParams.prompt.trim(),\n        size: {\n          width: generationParams.size.width,\n          height: generationParams.size.height,\n        },\n        palette: generationParams.palette,\n        seed: generationParams.seed,\n      };\n\n      const result = await api.generateSVG(request);\n      if (result) {\n        generationResult.value = result;\n\n        // Log performance metrics in development\n        if (process.env.NODE_ENV === \"development\") {\n          const duration = performanceMonitor.end(\"svg-generation\");\n          console.log(`SVG generation completed in ${duration?.toFixed(2)}ms`);\n        }\n      }\n    } catch (error) {\n      performanceMonitor.end(\"svg-generation\");\n      throw error;\n    }\n  };\n\n  const retryGeneration = async () => {\n    if (!generationParams.prompt.trim()) return;\n\n    const request: GenerationRequest = {\n      prompt: generationParams.prompt.trim(),\n      size: {\n        width: generationParams.size.width,\n        height: generationParams.size.height,\n      },\n      palette: generationParams.palette,\n      seed: generationParams.seed,\n    };\n\n    const result = await api.retry(request);\n    if (result) {\n      generationResult.value = result;\n    }\n  };\n\n  const clearError = () => {\n    api.clearError();\n  };\n\n  const clearResult = () => {\n    generationResult.value = null;\n  };\n\n  const resetParams = () => {\n    generationParams.prompt = \"\";\n    generationParams.size = {\n      preset: \"icon\",\n      width: 64,\n      height: 64,\n    };\n    generationParams.palette = undefined;\n    generationParams.seed = undefined;\n  };\n\n  return {\n    // State\n    generationParams,\n    generationResult,\n    sizePresets,\n\n    // API state\n    isGenerating: api.isLoading,\n    error: api.errorMessage,\n    isOnline: api.isOnline,\n    canRetry: api.canRetry,\n\n    // Computed\n    canGenerate,\n\n    // Methods\n    setSizePreset,\n    generateSVG,\n    retryGeneration,\n    clearError,\n    clearResult,\n    resetParams,\n  };\n}\n","import { ref, computed } from \"vue\";\nimport { apiService } from \"../services/api\";\nimport { useErrorHandler } from \"./useErrorHandler\";\nimport type { GenerationRequest, GenerationResponse } from \"../types/api\";\n\nexport interface ApiState {\n  loading: boolean;\n  error: string | null;\n  isOnline: boolean;\n  lastResponse: GenerationResponse | null;\n}\n\nexport function useApi() {\n  const errorHandler = useErrorHandler();\n\n  const state = ref<ApiState>({\n    loading: false,\n    error: null,\n    isOnline: navigator.onLine,\n    lastResponse: null,\n  });\n\n  // Setup online/offline detection\n  const updateOnlineStatus = () => {\n    state.value.isOnline = navigator.onLine;\n  };\n\n  window.addEventListener(\"online\", updateOnlineStatus);\n  window.addEventListener(\"offline\", updateOnlineStatus);\n\n  // Add request interceptor for loading state\n  apiService.addRequestInterceptor((request) => {\n    state.value.loading = true;\n    state.value.error = null;\n    return request;\n  });\n\n  // Add response interceptor for loading state\n  apiService.addResponseInterceptor((response) => {\n    state.value.loading = false;\n    return response;\n  });\n\n  const generateSVG = async (\n    request: GenerationRequest\n  ): Promise<GenerationResponse | null> => {\n    try {\n      state.value.loading = true;\n      state.value.error = null;\n\n      const response = await apiService.generateSVG(request);\n      state.value.lastResponse = response;\n\n      // Show success message\n      errorHandler.showSuccess(\n        \"SVG Generated\",\n        \"Your SVG has been created successfully!\"\n      );\n\n      return response;\n    } catch (error) {\n      state.value.loading = false;\n\n      // Use centralized error handling\n      if (error instanceof Error) {\n        errorHandler.handleGenerationError(error, {\n          component: \"useApi\",\n          action: \"generateSVG\",\n          metadata: { request },\n        });\n\n        // Set simple error message for UI state\n        state.value.error = error.message;\n      }\n\n      return null;\n    } finally {\n      state.value.loading = false;\n    }\n  };\n\n  const checkHealth = async (): Promise<boolean> => {\n    try {\n      await apiService.healthCheck();\n      return true;\n    } catch {\n      return false;\n    }\n  };\n\n  const clearError = () => {\n    state.value.error = null;\n  };\n\n  const retry = async (\n    request: GenerationRequest\n  ): Promise<GenerationResponse | null> => {\n    // Clear previous error and retry\n    clearError();\n    return generateSVG(request);\n  };\n\n  // Computed properties for easy access\n  const isLoading = computed(() => state.value.loading);\n  const hasError = computed(() => !!state.value.error);\n  const errorMessage = computed(() => state.value.error);\n  const isOnline = computed(() => state.value.isOnline);\n  const canRetry = computed(\n    () =>\n      hasError.value &&\n      (state.value.error?.includes(\"network\") ||\n        state.value.error?.includes(\"timeout\") ||\n        state.value.error?.includes(\"server\"))\n  );\n\n  return {\n    // State\n    state: computed(() => state.value),\n    isLoading,\n    hasError,\n    errorMessage,\n    isOnline,\n    canRetry,\n    lastResponse: computed(() => state.value.lastResponse),\n\n    // Methods\n    generateSVG,\n    checkHealth,\n    clearError,\n    retry,\n  };\n}\n","import { ref, computed, reactive } from \"vue\";\nimport type { ValidationError } from \"./useErrorHandler\";\n\ninterface ValidationRule {\n  field: string;\n  isValid: boolean;\n  message?: string;\n  code?: string;\n}\n\ninterface FormField {\n  isValid: boolean;\n  message?: string;\n  code?: string;\n  isDirty: boolean;\n  isTouched: boolean;\n}\n\nexport function useFormValidation() {\n  // Form state\n  const fields = reactive<Record<string, FormField>>({});\n  const isSubmitting = ref(false);\n  const submitAttempted = ref(false);\n\n  // Computed properties\n  const isFormValid = computed(() => {\n    return Object.values(fields).every((field) => field.isValid);\n  });\n\n  const hasErrors = computed(() => {\n    return Object.values(fields).some(\n      (field) => !field.isValid && (field.isTouched || submitAttempted.value)\n    );\n  });\n\n  const errorCount = computed(() => {\n    return Object.values(fields).filter(\n      (field) => !field.isValid && (field.isTouched || submitAttempted.value)\n    ).length;\n  });\n\n  const fieldErrors = computed(() => {\n    const errors: Record<string, string> = {};\n    Object.entries(fields).forEach(([fieldName, field]) => {\n      if (\n        !field.isValid &&\n        (field.isTouched || submitAttempted.value) &&\n        field.message\n      ) {\n        errors[fieldName] = field.message;\n      }\n    });\n    return errors;\n  });\n\n  const validationErrors = computed((): ValidationError[] => {\n    return Object.entries(fields)\n      .filter(\n        ([_, field]) =>\n          !field.isValid &&\n          (field.isTouched || submitAttempted.value) &&\n          field.message\n      )\n      .map(([fieldName, field]) => ({\n        field: fieldName,\n        message: field.message!,\n        code: field.code,\n      }));\n  });\n\n  const allErrors = computed(() => {\n    return Object.values(fieldErrors.value);\n  });\n\n  // Methods\n  const registerField = (\n    fieldName: string,\n    initialState: Partial<FormField> = {}\n  ) => {\n    fields[fieldName] = {\n      isValid: true,\n      message: undefined,\n      isDirty: false,\n      isTouched: false,\n      ...initialState,\n    };\n  };\n\n  const updateFieldValidation = (\n    fieldName: string,\n    isValid: boolean,\n    message?: string,\n    code?: string\n  ) => {\n    if (!fields[fieldName]) {\n      registerField(fieldName);\n    }\n\n    fields[fieldName].isValid = isValid;\n    fields[fieldName].message = message;\n    fields[fieldName].code = code;\n\n    if (!isValid || message) {\n      fields[fieldName].isDirty = true;\n    }\n  };\n\n  const touchField = (fieldName: string) => {\n    if (fields[fieldName]) {\n      fields[fieldName].isTouched = true;\n    }\n  };\n\n  const markFieldDirty = (fieldName: string) => {\n    if (fields[fieldName]) {\n      fields[fieldName].isDirty = true;\n    }\n  };\n\n  const resetField = (fieldName: string) => {\n    if (fields[fieldName]) {\n      fields[fieldName] = {\n        isValid: true,\n        message: undefined,\n        code: undefined,\n        isDirty: false,\n        isTouched: false,\n      };\n    }\n  };\n\n  const resetForm = () => {\n    Object.keys(fields).forEach((fieldName) => {\n      resetField(fieldName);\n    });\n    isSubmitting.value = false;\n    submitAttempted.value = false;\n  };\n\n  const validateForm = (): boolean => {\n    submitAttempted.value = true;\n\n    // Touch all fields to show validation errors\n    Object.keys(fields).forEach((fieldName) => {\n      touchField(fieldName);\n    });\n\n    return isFormValid.value;\n  };\n\n  const setSubmitting = (submitting: boolean) => {\n    isSubmitting.value = submitting;\n  };\n\n  const getFieldState = (fieldName: string): FormField | null => {\n    return fields[fieldName] || null;\n  };\n\n  const shouldShowError = (fieldName: string): boolean => {\n    const field = fields[fieldName];\n    return field\n      ? !field.isValid && (field.isTouched || submitAttempted.value)\n      : false;\n  };\n\n  const getFieldError = (fieldName: string): string | undefined => {\n    const field = fields[fieldName];\n    return shouldShowError(fieldName) ? field?.message : undefined;\n  };\n\n  // Validation helpers\n  const createValidationHandler = (fieldName: string) => {\n    return (isValid: boolean, message?: string, code?: string) => {\n      updateFieldValidation(fieldName, isValid, message, code);\n    };\n  };\n\n  const createTouchHandler = (fieldName: string) => {\n    return () => {\n      touchField(fieldName);\n    };\n  };\n\n  const createInputHandler = (fieldName: string) => {\n    return () => {\n      markFieldDirty(fieldName);\n    };\n  };\n\n  // Batch validation\n  const validateFields = (rules: ValidationRule[]) => {\n    rules.forEach((rule) => {\n      updateFieldValidation(rule.field, rule.isValid, rule.message);\n    });\n  };\n\n  return {\n    // State\n    fields,\n    isSubmitting,\n    submitAttempted,\n\n    // Computed\n    isFormValid,\n    hasErrors,\n    errorCount,\n    fieldErrors,\n    validationErrors,\n    allErrors,\n\n    // Methods\n    registerField,\n    updateFieldValidation,\n    touchField,\n    markFieldDirty,\n    resetField,\n    resetForm,\n    validateForm,\n    setSubmitting,\n    getFieldState,\n    shouldShowError,\n    getFieldError,\n\n    // Helpers\n    createValidationHandler,\n    createTouchHandler,\n    createInputHandler,\n    validateFields,\n  };\n}\n","import { createApp } from \"vue\";\nimport \"./style.css\";\nimport App from \"./App.vue\";\n\n// Create Vue app with error handling\nconst app = createApp(App);\n\n// Global error handler\napp.config.errorHandler = (err, _instance, info) => {\n  console.error(\"Vue error:\", err, info);\n  // In production, you might want to send this to an error reporting service\n};\n\n// Global warning handler (development only)\nif (import.meta.env?.DEV) {\n  app.config.warnHandler = (msg, _instance, trace) => {\n    console.warn(\"Vue warning:\", msg, trace);\n  };\n}\n\napp.mount(\"#app\");\n","<template>\n  <div class=\"min-h-screen bg-gray-50\">\n    <!-- Header -->\n    <header class=\"bg-white shadow-sm border-b border-gray-200\">\n      <div class=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n        <div class=\"flex justify-between items-center h-16\">\n          <div class=\"flex items-center\">\n            <h1 class=\"text-xl font-semibold text-gray-900\">\n              SVG AI Generator\n            </h1>\n          </div>\n          <div class=\"flex items-center space-x-4\">\n            <div class=\"text-sm text-gray-500\">\n              AI-powered SVG generation with live preview\n            </div>\n            <div class=\"flex items-center space-x-2\">\n              <div\n                :class=\"[\n                  'w-2 h-2 rounded-full',\n                  isOnline ? 'bg-green-400' : 'bg-red-400',\n                ]\"\n              ></div>\n              <span class=\"text-xs text-gray-500\">\n                {{ isOnline ? \"Online\" : \"Offline\" }}\n              </span>\n            </div>\n          </div>\n        </div>\n      </div>\n    </header>\n\n    <!-- Main Content -->\n    <main class=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\n      <!-- Offline Status -->\n      <div v-if=\"!isOnline\" class=\"mb-6\">\n        <div class=\"bg-yellow-50 border border-yellow-200 rounded-md p-4\">\n          <div class=\"flex\">\n            <div class=\"flex-shrink-0\">\n              <svg\n                class=\"h-5 w-5 text-yellow-400\"\n                viewBox=\"0 0 20 20\"\n                fill=\"currentColor\"\n              >\n                <path\n                  fill-rule=\"evenodd\"\n                  d=\"M8.257 3.099c.765-1.36 2.722-1.36 3.486 0l5.58 9.92c.75 1.334-.213 2.98-1.742 2.98H4.42c-1.53 0-2.493-1.646-1.743-2.98l5.58-9.92zM11 13a1 1 0 11-2 0 1 1 0 012 0zm-1-8a1 1 0 00-1 1v3a1 1 0 002 0V6a1 1 0 00-1-1z\"\n                  clip-rule=\"evenodd\"\n                />\n              </svg>\n            </div>\n            <div class=\"ml-3\">\n              <h3 class=\"text-sm font-medium text-yellow-800\">Offline</h3>\n              <div class=\"mt-2 text-sm text-yellow-700\">\n                You're currently offline. SVG generation requires an internet\n                connection.\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <!-- Error Messages -->\n      <div v-if=\"error || globalError\" class=\"mb-6\">\n        <div class=\"bg-red-50 border border-red-200 rounded-md p-4\">\n          <div class=\"flex\">\n            <div class=\"flex-shrink-0\">\n              <svg\n                class=\"h-5 w-5 text-red-400\"\n                viewBox=\"0 0 20 20\"\n                fill=\"currentColor\"\n              >\n                <path\n                  fill-rule=\"evenodd\"\n                  d=\"M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z\"\n                  clip-rule=\"evenodd\"\n                />\n              </svg>\n            </div>\n            <div class=\"ml-3\">\n              <h3 class=\"text-sm font-medium text-red-800\">\n                {{ error ? \"Generation Error\" : \"Application Error\" }}\n              </h3>\n              <div class=\"mt-2 text-sm text-red-700\">\n                {{ error || globalError }}\n              </div>\n              <div class=\"mt-4 space-x-2\">\n                <button\n                  v-if=\"error\"\n                  @click=\"clearError\"\n                  class=\"bg-red-100 px-2 py-1 text-xs font-medium text-red-800 rounded hover:bg-red-200\"\n                >\n                  Dismiss\n                </button>\n                <button\n                  v-if=\"globalError\"\n                  @click=\"clearGlobalError\"\n                  class=\"bg-red-100 px-2 py-1 text-xs font-medium text-red-800 rounded hover:bg-red-200\"\n                >\n                  Dismiss\n                </button>\n                <button\n                  v-if=\"canRetry\"\n                  @click=\"retryGeneration\"\n                  class=\"bg-red-100 px-2 py-1 text-xs font-medium text-red-800 rounded hover:bg-red-200\"\n                >\n                  Retry\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <!-- Application Layout -->\n      <div class=\"grid grid-cols-1 lg:grid-cols-2 gap-8\">\n        <!-- Left Panel - Input Controls -->\n        <div class=\"space-y-6\">\n          <div class=\"bg-white rounded-lg shadow p-6\">\n            <h2 class=\"text-lg font-medium text-gray-900 mb-4\">Generate SVG</h2>\n\n            <!-- Prompt Input Section -->\n            <div class=\"space-y-4\">\n              <div>\n                <label\n                  for=\"prompt\"\n                  class=\"block text-sm font-medium text-gray-700 mb-2\"\n                >\n                  Describe your SVG\n                </label>\n                <textarea\n                  id=\"prompt\"\n                  v-model=\"generationParams.prompt\"\n                  rows=\"3\"\n                  class=\"w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500\"\n                  placeholder=\"e.g., A blue circle with a red border, or a simple house icon\"\n                  :maxlength=\"500\"\n                />\n                <div class=\"mt-1 text-xs text-gray-500\">\n                  {{ generationParams.prompt.length }}/500 characters\n                </div>\n              </div>\n\n              <!-- Size Controls -->\n              <div>\n                <label class=\"block text-sm font-medium text-gray-700 mb-2\">\n                  Size\n                </label>\n                <div class=\"grid grid-cols-2 sm:grid-cols-4 gap-2 mb-3\">\n                  <button\n                    v-for=\"preset in sizePresets\"\n                    :key=\"preset.name\"\n                    @click=\"setSizePreset(preset)\"\n                    :class=\"[\n                      'px-3 py-2 text-xs font-medium rounded border',\n                      generationParams.size.preset === preset.name\n                        ? 'bg-blue-50 border-blue-200 text-blue-700'\n                        : 'bg-white border-gray-300 text-gray-700 hover:bg-gray-50',\n                    ]\"\n                  >\n                    {{ preset.label }}\n                  </button>\n                </div>\n\n                <div\n                  v-if=\"generationParams.size.preset === 'custom'\"\n                  class=\"grid grid-cols-2 gap-3\"\n                >\n                  <div>\n                    <label class=\"block text-xs font-medium text-gray-700 mb-1\"\n                      >Width</label\n                    >\n                    <input\n                      v-model.number=\"generationParams.size.width\"\n                      type=\"number\"\n                      min=\"16\"\n                      max=\"2048\"\n                      class=\"w-full px-2 py-1 text-sm border border-gray-300 rounded focus:outline-none focus:ring-blue-500 focus:border-blue-500\"\n                    />\n                  </div>\n                  <div>\n                    <label class=\"block text-xs font-medium text-gray-700 mb-1\"\n                      >Height</label\n                    >\n                    <input\n                      v-model.number=\"generationParams.size.height\"\n                      type=\"number\"\n                      min=\"16\"\n                      max=\"2048\"\n                      class=\"w-full px-2 py-1 text-sm border border-gray-300 rounded focus:outline-none focus:ring-blue-500 focus:border-blue-500\"\n                    />\n                  </div>\n                </div>\n              </div>\n\n              <!-- Generate Button -->\n              <button\n                @click=\"generateSVG\"\n                :disabled=\"!canGenerate || isGenerating\"\n                class=\"w-full bg-blue-600 text-white py-2 px-4 rounded-md hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 disabled:opacity-50 disabled:cursor-not-allowed\"\n              >\n                <span\n                  v-if=\"isGenerating\"\n                  class=\"flex items-center justify-center\"\n                >\n                  <svg\n                    class=\"animate-spin -ml-1 mr-3 h-5 w-5 text-white\"\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                    fill=\"none\"\n                    viewBox=\"0 0 24 24\"\n                  >\n                    <circle\n                      class=\"opacity-25\"\n                      cx=\"12\"\n                      cy=\"12\"\n                      r=\"10\"\n                      stroke=\"currentColor\"\n                      stroke-width=\"4\"\n                    ></circle>\n                    <path\n                      class=\"opacity-75\"\n                      fill=\"currentColor\"\n                      d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"\n                    ></path>\n                  </svg>\n                  Generating...\n                </span>\n                <span v-else>Generate SVG</span>\n              </button>\n            </div>\n          </div>\n        </div>\n\n        <!-- Right Panel - Preview and Output -->\n        <div class=\"space-y-6\">\n          <!-- SVG Preview -->\n          <div class=\"bg-white rounded-lg shadow p-6\">\n            <h2 class=\"text-lg font-medium text-gray-900 mb-4\">Preview</h2>\n\n            <div v-if=\"generationResult\" class=\"space-y-4\">\n              <!-- SVG Display -->\n              <div\n                class=\"border border-gray-200 rounded-lg p-4 bg-gray-50 min-h-[200px] flex items-center justify-center\"\n              >\n                <div\n                  v-html=\"generationResult.svg\"\n                  class=\"max-w-full max-h-full\"\n                ></div>\n              </div>\n\n              <!-- Metadata -->\n              <div v-if=\"generationResult.meta\" class=\"text-sm text-gray-600\">\n                <div class=\"grid grid-cols-2 gap-4\">\n                  <div>\n                    <span class=\"font-medium\">Size:</span>\n                    {{ generationResult.meta.width }}×{{\n                      generationResult.meta.height\n                    }}\n                  </div>\n                  <div>\n                    <span class=\"font-medium\">Seed:</span>\n                    {{ generationResult.meta.seed }}\n                  </div>\n                </div>\n              </div>\n\n              <!-- Copy Button -->\n              <button\n                @click=\"copySVGCode\"\n                class=\"w-full bg-gray-100 text-gray-700 py-2 px-4 rounded-md hover:bg-gray-200 focus:outline-none focus:ring-2 focus:ring-gray-500 focus:ring-offset-2\"\n              >\n                {{ copyButtonText }}\n              </button>\n            </div>\n\n            <div\n              v-else-if=\"!isGenerating\"\n              class=\"text-center text-gray-500 py-12\"\n            >\n              <svg\n                class=\"mx-auto h-12 w-12 text-gray-400\"\n                stroke=\"currentColor\"\n                fill=\"none\"\n                viewBox=\"0 0 48 48\"\n              >\n                <path\n                  d=\"M28 8H12a4 4 0 00-4 4v20m32-12v8m0 0v8a4 4 0 01-4 4H12a4 4 0 01-4-4v-4m32-4l-3.172-3.172a4 4 0 00-5.656 0L28 28M8 32l9.172-9.172a4 4 0 015.656 0L28 28m0 0l4 4m4-24h8m-4-4v8m-12 4h.02\"\n                  stroke-width=\"2\"\n                  stroke-linecap=\"round\"\n                  stroke-linejoin=\"round\"\n                />\n              </svg>\n              <p class=\"mt-2\">\n                Enter a prompt and click \"Generate SVG\" to see your creation\n              </p>\n            </div>\n\n            <div v-else class=\"text-center text-gray-500 py-12\">\n              <svg\n                class=\"animate-spin mx-auto h-8 w-8 text-gray-400\"\n                xmlns=\"http://www.w3.org/2000/svg\"\n                fill=\"none\"\n                viewBox=\"0 0 24 24\"\n              >\n                <circle\n                  class=\"opacity-25\"\n                  cx=\"12\"\n                  cy=\"12\"\n                  r=\"10\"\n                  stroke=\"currentColor\"\n                  stroke-width=\"4\"\n                ></circle>\n                <path\n                  class=\"opacity-75\"\n                  fill=\"currentColor\"\n                  d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"\n                ></path>\n              </svg>\n              <p class=\"mt-2\">Generating your SVG...</p>\n            </div>\n          </div>\n        </div>\n      </div>\n    </main>\n\n    <!-- Footer -->\n    <footer class=\"bg-white border-t border-gray-200 mt-12\">\n      <div class=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-4\">\n        <p class=\"text-center text-sm text-gray-500\">\n          ⚠️ All generated SVGs are automatically sanitized for security. Only\n          safe elements and attributes are included.\n        </p>\n      </div>\n    </footer>\n\n    <!-- Toast Notifications -->\n    <ToastContainer />\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { ref } from \"vue\";\nimport { useGeneration } from \"./composables/useGeneration\";\nimport { useErrorHandler } from \"./composables/useErrorHandler\";\nimport ToastContainer from \"./components/ToastContainer.vue\";\n\n// Use generation composable\nconst {\n  generationParams,\n  generationResult,\n  sizePresets,\n  isGenerating,\n  error,\n  isOnline,\n  canRetry,\n  canGenerate,\n  setSizePreset,\n  generateSVG,\n  retryGeneration,\n  clearError,\n} = useGeneration();\n\nconst errorHandler = useErrorHandler();\nconst globalError = ref<string | null>(null);\nconst copyButtonText = ref(\"Copy SVG Code\");\n\n// Methods\n\nconst copySVGCode = async () => {\n  if (!generationResult.value?.svg) return;\n\n  try {\n    await navigator.clipboard.writeText(generationResult.value.svg);\n    copyButtonText.value = \"Copied!\";\n    errorHandler.showSuccess(\"Copied!\", \"SVG code copied to clipboard\");\n    setTimeout(() => {\n      copyButtonText.value = \"Copy SVG Code\";\n    }, 2000);\n  } catch (error) {\n    console.error(\"Copy failed:\", error);\n    errorHandler.handleCopyError(\n      error instanceof Error ? error : new Error(\"Copy failed\"),\n      { component: \"App\", action: \"copySVGCode\" }\n    );\n  }\n};\n\nconst clearGlobalError = () => {\n  globalError.value = null;\n};\n\n// Global error handler\nwindow.addEventListener(\"error\", (event) => {\n  const error = event.error || new Error(\"Unknown error\");\n  errorHandler.handleUnexpectedError(error, {\n    component: \"App\",\n    action: \"global_error_handler\",\n  });\n});\n\nwindow.addEventListener(\"unhandledrejection\", (event) => {\n  const error =\n    event.reason instanceof Error\n      ? event.reason\n      : new Error(event.reason?.message || \"Unknown error\");\n  errorHandler.handleUnexpectedError(error, {\n    component: \"App\",\n    action: \"unhandled_rejection\",\n  });\n});\n</script>\n"],"names":["APIError","Error","constructor","message","statusCode","response","super","this","name","NetworkError","TimeoutError","apiService","baseURL","__publicField","maxRetries","baseDelay","maxDelay","retryCondition","error","navigator","onLine","setupOnlineDetection","window","addEventListener","isOnline","addRequestInterceptor","interceptor","requestInterceptors","push","addResponseInterceptor","responseInterceptors","setRetryConfig","config","retryConfig","applyRequestInterceptors","request","processedRequest","applyResponseInterceptors","processedResponse","sleep","ms","Promise","resolve","setTimeout","calculateDelay","attempt","delay","Math","pow","min","fetchWithTimeout","url","options","timeout","controller","AbortController","timeoutId","abort","fetch","signal","clearTimeout","makeRequest","processedOptions","lastError","String","_b","_a","TypeError","includes","generateSVG","method","headers","body","JSON","stringify","ok","errorData","json","catch","status","statusText","healthCheck","isOffline","checkConnection","useErrorHandler","toast","useToast","logError","context","stack","Date","toISOString","handleAPIError","actions","label","action","style","warning","handleValidationErrors","errors","map","e","join","length","handleGenerationError","generationErrors","handleCopyError","handleUnexpectedError","location","reload","showSuccess","title","success","showWarning","showInfo","info","useGeneration","api","errorHandler","state","ref","loading","lastResponse","updateOnlineStatus","value","async","component","metadata","clearError","isLoading","computed","hasError","errorMessage","canRetry","_c","checkHealth","retry","useApi","validation","fields","reactive","isSubmitting","submitAttempted","isFormValid","Object","values","every","field","isValid","hasErrors","some","isTouched","errorCount","filter","fieldErrors","entries","forEach","fieldName","validationErrors","_","code","allErrors","registerField","initialState","isDirty","updateFieldValidation","touchField","markFieldDirty","resetField","shouldShowError","resetForm","keys","validateForm","setSubmitting","submitting","getFieldState","getFieldError","createValidationHandler","createTouchHandler","createInputHandler","validateFields","rules","rule","useFormValidation","generationParams","prompt","size","preset","width","height","generationResult","canGenerate","trim","debouncedSanitization","debounce","newPrompt","performanceMonitor","start","sanitizationResult","InputSanitizer","sanitizePrompt","wasModified","sanitized","warnings","isSuspiciousInput","end","watch","sizePresets","isGenerating","setSizePreset","promptLength","widthResult","sanitizeNumber","heightResult","validateInput","palette","seed","result","retryGeneration","clearResult","resetParams","app","createApp","globalError","copyButtonText","copySVGCode","svg","clipboard","writeText","clearGlobalError","event","reason","_openBlock","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_hoisted_3","_hoisted_4","class","_hoisted_5","_cache","_hoisted_6","_normalizeClass","_unref","_hoisted_7","_toDisplayString","_hoisted_8","_hoisted_9","_hoisted_10","_hoisted_11","_hoisted_12","viewBox","fill","d","_hoisted_13","_hoisted_14","_hoisted_15","_hoisted_16","onClick","args","_hoisted_17","_hoisted_18","_hoisted_19","_hoisted_20","for","id","$event","rows","placeholder","maxlength","_vModelText","_hoisted_21","_hoisted_22","_Fragment","_renderList","key","_hoisted_23","_hoisted_24","type","max","number","disabled","_hoisted_26","xmlns","cx","cy","r","stroke","_hoisted_28","_hoisted_29","_hoisted_30","_hoisted_31","innerHTML","meta","_hoisted_33","_hoisted_34","_createTextVNode","_hoisted_36","_hoisted_35","_createVNode","ToastContainer","err","_instance","mount"],"mappings":"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"}