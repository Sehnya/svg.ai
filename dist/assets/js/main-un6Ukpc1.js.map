{"version":3,"file":"main-un6Ukpc1.js","sources":["../../../src/services/api.ts","../../../src/composables/useErrorHandler.ts","../../../src/composables/useGeneration.ts","../../../src/composables/useApi.ts","../../../src/composables/useFormValidation.ts","../../../src/components/SVGPreview.vue","../../../src/utils/clipboard.ts","../../../src/components/CodeOutput.vue","../../../src/components/MetadataDisplay.vue","../../../src/components/LayerIcon.vue","../../../src/components/LayerTreeNode.vue","../../../src/components/LayerInspector.vue","../../../src/main.ts","../../../src/App.vue"],"sourcesContent":["import type { GenerationRequest, GenerationResponse } from \"../types/api\";\n\nconst API_BASE_URL =\n  import.meta.env.VITE_API_BASE_URL ||\n  (import.meta.env.PROD ? \"\" : \"http://localhost:3001\");\n\nexport class APIError extends Error {\n  constructor(\n    message: string,\n    public statusCode?: number,\n    public response?: any\n  ) {\n    super(message);\n    this.name = \"APIError\";\n  }\n}\n\nexport class NetworkError extends APIError {\n  constructor(message: string = \"Network connection failed\") {\n    super(message);\n    this.name = \"NetworkError\";\n  }\n}\n\nexport class TimeoutError extends APIError {\n  constructor(message: string = \"Request timeout\") {\n    super(message);\n    this.name = \"TimeoutError\";\n  }\n}\n\ninterface RequestInterceptor {\n  (request: RequestInit): RequestInit | Promise<RequestInit>;\n}\n\ninterface ResponseInterceptor {\n  (response: Response): Response | Promise<Response>;\n}\n\ninterface RetryConfig {\n  maxRetries: number;\n  baseDelay: number;\n  maxDelay: number;\n  retryCondition?: (error: Error) => boolean;\n}\n\nexport class APIService {\n  private baseURL: string;\n  private requestInterceptors: RequestInterceptor[] = [];\n  private responseInterceptors: ResponseInterceptor[] = [];\n  private retryConfig: RetryConfig = {\n    maxRetries: 3,\n    baseDelay: 1000,\n    maxDelay: 10000,\n    retryCondition: (error) => {\n      return (\n        error instanceof NetworkError ||\n        (error instanceof APIError &&\n          error.statusCode !== undefined &&\n          error.statusCode >= 500)\n      );\n    },\n  };\n  private isOnline: boolean = navigator.onLine;\n\n  constructor(baseURL: string = API_BASE_URL) {\n    this.baseURL = baseURL;\n    this.setupOnlineDetection();\n  }\n\n  private setupOnlineDetection(): void {\n    window.addEventListener(\"online\", () => {\n      this.isOnline = true;\n    });\n\n    window.addEventListener(\"offline\", () => {\n      this.isOnline = false;\n    });\n  }\n\n  addRequestInterceptor(interceptor: RequestInterceptor): void {\n    this.requestInterceptors.push(interceptor);\n  }\n\n  addResponseInterceptor(interceptor: ResponseInterceptor): void {\n    this.responseInterceptors.push(interceptor);\n  }\n\n  setRetryConfig(config: Partial<RetryConfig>): void {\n    this.retryConfig = { ...this.retryConfig, ...config };\n  }\n\n  private async applyRequestInterceptors(\n    request: RequestInit\n  ): Promise<RequestInit> {\n    let processedRequest = request;\n    for (const interceptor of this.requestInterceptors) {\n      processedRequest = await interceptor(processedRequest);\n    }\n    return processedRequest;\n  }\n\n  private async applyResponseInterceptors(\n    response: Response\n  ): Promise<Response> {\n    let processedResponse = response;\n    for (const interceptor of this.responseInterceptors) {\n      processedResponse = await interceptor(processedResponse);\n    }\n    return processedResponse;\n  }\n\n  private async sleep(ms: number): Promise<void> {\n    return new Promise((resolve) => setTimeout(resolve, ms));\n  }\n\n  private calculateDelay(attempt: number): number {\n    const delay = this.retryConfig.baseDelay * Math.pow(2, attempt);\n    return Math.min(delay, this.retryConfig.maxDelay);\n  }\n\n  private async fetchWithTimeout(\n    url: string,\n    options: RequestInit,\n    timeout: number = 30000\n  ): Promise<Response> {\n    const controller = new AbortController();\n    const timeoutId = setTimeout(() => controller.abort(), timeout);\n\n    try {\n      const response = await fetch(url, {\n        ...options,\n        signal: controller.signal,\n      });\n      clearTimeout(timeoutId);\n      return response;\n    } catch (error) {\n      clearTimeout(timeoutId);\n      if (error instanceof Error && error.name === \"AbortError\") {\n        throw new TimeoutError();\n      }\n      throw error;\n    }\n  }\n\n  private async makeRequest(\n    url: string,\n    options: RequestInit\n  ): Promise<Response> {\n    // Check online status\n    if (!this.isOnline) {\n      throw new NetworkError(\n        \"Application is offline. Please check your internet connection.\"\n      );\n    }\n\n    // Apply request interceptors\n    const processedOptions = await this.applyRequestInterceptors(options);\n\n    let lastError: Error | null = null;\n\n    for (let attempt = 0; attempt <= this.retryConfig.maxRetries; attempt++) {\n      try {\n        const response = await this.fetchWithTimeout(url, processedOptions);\n\n        // Apply response interceptors\n        const processedResponse =\n          await this.applyResponseInterceptors(response);\n\n        return processedResponse;\n      } catch (error) {\n        lastError = error instanceof Error ? error : new Error(String(error));\n\n        // Don't retry on the last attempt\n        if (attempt === this.retryConfig.maxRetries) {\n          break;\n        }\n\n        // Check if we should retry this error\n        if (!this.retryConfig.retryCondition?.(lastError)) {\n          break;\n        }\n\n        // Wait before retrying with exponential backoff\n        const delay = this.calculateDelay(attempt);\n        await this.sleep(delay);\n      }\n    }\n\n    // Convert fetch errors to our custom error types\n    if (\n      lastError &&\n      lastError instanceof TypeError &&\n      lastError.message.includes(\"fetch\")\n    ) {\n      throw new NetworkError(\"Network error: Unable to connect to the server\");\n    }\n\n    throw lastError || new Error(\"Unknown error occurred\");\n  }\n\n  async generateSVG(request: GenerationRequest): Promise<GenerationResponse> {\n    try {\n      const response = await this.makeRequest(`${this.baseURL}/api/generate`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(request),\n      });\n\n      if (!response.ok) {\n        const errorData = await response.json().catch(() => ({}));\n        throw new APIError(\n          errorData.message ||\n            `HTTP ${response.status}: ${response.statusText}`,\n          response.status,\n          errorData\n        );\n      }\n\n      const data = await response.json();\n      return data;\n    } catch (error) {\n      if (\n        error instanceof APIError ||\n        error instanceof NetworkError ||\n        error instanceof TimeoutError\n      ) {\n        throw error;\n      }\n\n      throw new APIError(\n        error instanceof Error ? error.message : \"An unexpected error occurred\"\n      );\n    }\n  }\n\n  async healthCheck(): Promise<{ status: string; timestamp: string }> {\n    try {\n      const response = await this.makeRequest(`${this.baseURL}/health`, {\n        method: \"GET\",\n      });\n\n      if (!response.ok) {\n        throw new APIError(`Health check failed: ${response.status}`);\n      }\n\n      return await response.json();\n    } catch (error) {\n      if (\n        error instanceof APIError ||\n        error instanceof NetworkError ||\n        error instanceof TimeoutError\n      ) {\n        throw error;\n      }\n\n      throw new APIError(\"Health check failed: Unable to connect to server\");\n    }\n  }\n\n  // Utility methods for checking connection status\n  isOffline(): boolean {\n    return !this.isOnline;\n  }\n\n  async checkConnection(): Promise<boolean> {\n    try {\n      await this.healthCheck();\n      return true;\n    } catch {\n      return false;\n    }\n  }\n}\n\n// Export a default instance\nexport const apiService = new APIService();\n","import { useToast } from \"./useToast\";\nimport { APIError, NetworkError, TimeoutError } from \"../services/api\";\n\nexport interface ErrorContext {\n  component?: string;\n  action?: string;\n  userId?: string;\n  timestamp?: Date;\n  metadata?: Record<string, any>;\n}\n\nexport interface ValidationError {\n  field: string;\n  message: string;\n  code?: string;\n}\n\nexport function useErrorHandler() {\n  const toast = useToast();\n\n  const logError = (error: Error, context?: ErrorContext) => {\n    const errorLog = {\n      message: error.message,\n      stack: error.stack,\n      name: error.name,\n      timestamp: new Date().toISOString(),\n      context,\n    };\n\n    // In production, send to error monitoring service\n    console.error(\"Error logged:\", errorLog);\n\n    // Could integrate with services like Sentry, LogRocket, etc.\n    // Sentry.captureException(error, { contexts: { custom: context } });\n  };\n\n  const handleAPIError = (error: Error, context?: ErrorContext) => {\n    logError(error, context);\n\n    if (error instanceof NetworkError) {\n      toast.error(\n        \"Connection Failed\",\n        \"Unable to connect to the server. Please check your internet connection.\",\n        {\n          actions: [\n            {\n              label: \"Retry\",\n              action: () => {\n                // Retry logic would be handled by the calling component\n                console.log(\"Retry requested\");\n              },\n              style: \"primary\",\n            },\n          ],\n        }\n      );\n    } else if (error instanceof TimeoutError) {\n      toast.error(\n        \"Request Timeout\",\n        \"The request took too long to complete. The server may be busy.\",\n        {\n          actions: [\n            {\n              label: \"Try Again\",\n              action: () => {\n                console.log(\"Retry requested\");\n              },\n              style: \"primary\",\n            },\n          ],\n        }\n      );\n    } else if (error instanceof APIError) {\n      const statusCode = error.statusCode;\n\n      if (statusCode === 400) {\n        toast.error(\n          \"Invalid Request\",\n          \"Please check your input and try again.\"\n        );\n      } else if (statusCode === 401) {\n        toast.error(\"Authentication Required\", \"Please log in to continue.\");\n      } else if (statusCode === 403) {\n        toast.error(\n          \"Access Denied\",\n          \"You don't have permission to perform this action.\"\n        );\n      } else if (statusCode === 404) {\n        toast.error(\"Not Found\", \"The requested resource could not be found.\");\n      } else if (statusCode === 429) {\n        toast.warning(\n          \"Rate Limited\",\n          \"Too many requests. Please wait a moment before trying again.\"\n        );\n      } else if (statusCode && statusCode >= 500) {\n        toast.error(\n          \"Server Error\",\n          \"Something went wrong on our end. Please try again later.\",\n          {\n            actions: [\n              {\n                label: \"Report Issue\",\n                action: () => {\n                  // Open support/feedback form\n                  console.log(\"Report issue requested\");\n                },\n                style: \"secondary\",\n              },\n            ],\n          }\n        );\n      } else {\n        toast.error(\n          \"Request Failed\",\n          error.message || \"An unexpected error occurred.\"\n        );\n      }\n    } else {\n      toast.error(\n        \"Unexpected Error\",\n        \"Something unexpected happened. Please try again.\"\n      );\n    }\n  };\n\n  const handleValidationErrors = (\n    errors: ValidationError[],\n    context?: ErrorContext\n  ) => {\n    logError(\n      new Error(\n        `Validation failed: ${errors.map((e) => e.message).join(\", \")}`\n      ),\n      context\n    );\n\n    if (errors.length === 1) {\n      toast.warning(\"Validation Error\", errors[0].message);\n    } else {\n      toast.warning(\n        \"Multiple Validation Errors\",\n        `Please fix ${errors.length} validation errors and try again.`,\n        {\n          actions: [\n            {\n              label: \"Show Details\",\n              action: () => {\n                // Show detailed validation errors\n                console.log(\"Show validation details:\", errors);\n              },\n              style: \"secondary\",\n            },\n          ],\n        }\n      );\n    }\n  };\n\n  const handleGenerationError = (error: Error, context?: ErrorContext) => {\n    logError(error, { ...context, action: \"svg_generation\" });\n\n    if (error instanceof APIError && error.response?.errors) {\n      // Handle structured generation errors\n      const generationErrors = error.response.errors;\n      toast.error(\"Generation Failed\", generationErrors.join(\". \"), {\n        actions: [\n          {\n            label: \"Try Different Prompt\",\n            action: () => {\n              console.log(\"Suggest prompt changes\");\n            },\n            style: \"primary\",\n          },\n        ],\n      });\n    } else {\n      handleAPIError(error, context);\n    }\n  };\n\n  const handleCopyError = (error: Error, context?: ErrorContext) => {\n    logError(error, { ...context, action: \"copy_to_clipboard\" });\n\n    toast.error(\n      \"Copy Failed\",\n      \"Unable to copy to clipboard. You can manually select and copy the code.\",\n      {\n        actions: [\n          {\n            label: \"Select Text\",\n            action: () => {\n              // Focus and select the text area\n              console.log(\"Select text requested\");\n            },\n            style: \"primary\",\n          },\n        ],\n      }\n    );\n  };\n\n  const handleUnexpectedError = (error: Error, context?: ErrorContext) => {\n    logError(error, { ...context, action: \"unexpected_error\" });\n\n    toast.error(\n      \"Unexpected Error\",\n      \"Something went wrong. The error has been logged and we'll investigate.\",\n      {\n        actions: [\n          {\n            label: \"Reload Page\",\n            action: () => {\n              window.location.reload();\n            },\n            style: \"secondary\",\n          },\n        ],\n      }\n    );\n  };\n\n  const showSuccess = (title: string, message?: string) => {\n    toast.success(title, message);\n  };\n\n  const showWarning = (title: string, message?: string) => {\n    toast.warning(title, message);\n  };\n\n  const showInfo = (title: string, message?: string) => {\n    toast.info(title, message);\n  };\n\n  const showError = (title: string, message?: string) => {\n    toast.error(title, message);\n  };\n\n  return {\n    logError,\n    handleAPIError,\n    handleValidationErrors,\n    handleGenerationError,\n    handleCopyError,\n    handleUnexpectedError,\n    showSuccess,\n    showWarning,\n    showInfo,\n    showError,\n  };\n}\n","import { ref, reactive, computed, watch } from \"vue\";\nimport type {\n  GenerationRequest,\n  GenerationResponse,\n  SizeConfig,\n} from \"../types/api\";\nimport { useApi } from \"./useApi\";\nimport { useErrorHandler } from \"./useErrorHandler\";\nimport { useFormValidation } from \"./useFormValidation\";\nimport { InputSanitizer } from \"../utils/inputSanitizer\";\nimport { debounce } from \"../utils/debounce\";\nimport { performanceMonitor } from \"../utils/performance\";\n\nexport function useGeneration() {\n  // Use API composable for network operations\n  const api = useApi();\n  const errorHandler = useErrorHandler();\n  const validation = useFormValidation();\n\n  // Reactive state\n  const generationParams = reactive<{\n    prompt: string;\n    size: SizeConfig;\n    palette?: string[];\n    seed?: number;\n  }>({\n    prompt: \"\",\n    size: {\n      preset: \"icon\",\n      width: 64,\n      height: 64,\n    },\n  });\n\n  const generationResult = ref<GenerationResponse | null>(null);\n\n  // Size presets\n  const sizePresets = [\n    { name: \"icon\", label: \"Icon\", width: 64, height: 64 },\n    { name: \"banner\", label: \"Banner\", width: 400, height: 100 },\n    { name: \"square\", label: \"Square\", width: 200, height: 200 },\n    { name: \"custom\", label: \"Custom\", width: 100, height: 100 },\n  ] as const;\n\n  // Computed properties\n  const canGenerate = computed(() => {\n    return (\n      generationParams.prompt.trim().length > 0 &&\n      generationParams.size.width >= 16 &&\n      generationParams.size.width <= 2048 &&\n      generationParams.size.height >= 16 &&\n      generationParams.size.height <= 2048 &&\n      !api.isLoading.value &&\n      api.isOnline.value\n    );\n  });\n\n  // Methods\n  const setSizePreset = (preset: (typeof sizePresets)[number]) => {\n    generationParams.size.preset = preset.name;\n    if (preset.name !== \"custom\") {\n      generationParams.size.width = preset.width;\n      generationParams.size.height = preset.height;\n    }\n  };\n\n  // Initialize form validation\n  validation.registerField(\"prompt\", {\n    isValid: false,\n    message: \"Prompt is required\",\n  });\n  validation.registerField(\"width\", { isValid: true });\n  validation.registerField(\"height\", { isValid: true });\n\n  // Debounced input sanitization to avoid excessive processing\n  const debouncedSanitization = debounce((newPrompt: string) => {\n    if (newPrompt) {\n      performanceMonitor.start(\"input-sanitization\");\n\n      const sanitizationResult = InputSanitizer.sanitizePrompt(newPrompt);\n\n      if (sanitizationResult.wasModified) {\n        generationParams.prompt = sanitizationResult.sanitized;\n\n        // Show warnings for sanitization\n        sanitizationResult.warnings.forEach((warning) => {\n          errorHandler.showWarning(\"Input Modified\", warning);\n        });\n      }\n\n      // Check for suspicious input\n      if (InputSanitizer.isSuspiciousInput(newPrompt)) {\n        errorHandler.showWarning(\n          \"Suspicious Input Detected\",\n          \"Your input contains potentially unsafe content that has been removed.\"\n        );\n      }\n\n      performanceMonitor.end(\"input-sanitization\");\n    }\n  }, 300); // 300ms debounce\n\n  // Watch for prompt changes and sanitize input\n  watch(() => generationParams.prompt, debouncedSanitization);\n\n  const validateInput = () => {\n    // Sanitize and validate prompt\n    const promptResult = InputSanitizer.sanitizePrompt(generationParams.prompt);\n    const prompt = promptResult.sanitized;\n\n    // Sanitize and validate dimensions\n    const widthResult = InputSanitizer.sanitizeNumber(\n      generationParams.size.width,\n      16,\n      2048,\n      64\n    );\n    const heightResult = InputSanitizer.sanitizeNumber(\n      generationParams.size.height,\n      16,\n      2048,\n      64\n    );\n\n    // Update values if they were sanitized\n    if (widthResult.wasModified) {\n      generationParams.size.width = widthResult.value;\n      widthResult.warnings.forEach((warning) => {\n        errorHandler.showWarning(\"Width Adjusted\", warning);\n      });\n    }\n\n    if (heightResult.wasModified) {\n      generationParams.size.height = heightResult.value;\n      heightResult.warnings.forEach((warning) => {\n        errorHandler.showWarning(\"Height Adjusted\", warning);\n      });\n    }\n\n    // Validate prompt\n    validation.updateFieldValidation(\n      \"prompt\",\n      prompt.length > 0 && prompt.length <= 500,\n      prompt.length === 0\n        ? \"Prompt is required\"\n        : prompt.length > 500\n          ? \"Prompt must be 500 characters or less\"\n          : undefined\n    );\n\n    // Validate dimensions\n    validation.updateFieldValidation(\n      \"width\",\n      widthResult.value >= 16 && widthResult.value <= 2048,\n      widthResult.value < 16 || widthResult.value > 2048\n        ? \"Width must be between 16 and 2048 pixels\"\n        : undefined\n    );\n\n    validation.updateFieldValidation(\n      \"height\",\n      heightResult.value >= 16 && heightResult.value <= 2048,\n      heightResult.value < 16 || heightResult.value > 2048\n        ? \"Height must be between 16 and 2048 pixels\"\n        : undefined\n    );\n\n    return validation.isFormValid.value;\n  };\n\n  const generateSVG = async () => {\n    performanceMonitor.start(\"svg-generation\", {\n      promptLength: generationParams.prompt.length,\n      size: `${generationParams.size.width}x${generationParams.size.height}`,\n    });\n\n    try {\n      if (!validateInput()) {\n        errorHandler.handleValidationErrors(validation.validationErrors.value, {\n          component: \"useGeneration\",\n          action: \"generateSVG\",\n        });\n        return;\n      }\n\n      if (!canGenerate.value) return;\n\n      const request: GenerationRequest = {\n        prompt: generationParams.prompt.trim(),\n        size: {\n          width: generationParams.size.width,\n          height: generationParams.size.height,\n        },\n        palette: generationParams.palette,\n        seed: generationParams.seed,\n      };\n\n      const result = await api.generateSVG(request);\n      if (result) {\n        generationResult.value = result;\n\n        // Log performance metrics in development\n        if (process.env.NODE_ENV === \"development\") {\n          const duration = performanceMonitor.end(\"svg-generation\");\n          console.log(`SVG generation completed in ${duration?.toFixed(2)}ms`);\n        }\n      }\n    } catch (error) {\n      performanceMonitor.end(\"svg-generation\");\n      throw error;\n    }\n  };\n\n  const retryGeneration = async () => {\n    if (!generationParams.prompt.trim()) return;\n\n    const request: GenerationRequest = {\n      prompt: generationParams.prompt.trim(),\n      size: {\n        width: generationParams.size.width,\n        height: generationParams.size.height,\n      },\n      palette: generationParams.palette,\n      seed: generationParams.seed,\n    };\n\n    const result = await api.retry(request);\n    if (result) {\n      generationResult.value = result;\n    }\n  };\n\n  const clearError = () => {\n    api.clearError();\n  };\n\n  const clearResult = () => {\n    generationResult.value = null;\n  };\n\n  const resetParams = () => {\n    generationParams.prompt = \"\";\n    generationParams.size = {\n      preset: \"icon\",\n      width: 64,\n      height: 64,\n    };\n    generationParams.palette = undefined;\n    generationParams.seed = undefined;\n  };\n\n  return {\n    // State\n    generationParams,\n    generationResult,\n    sizePresets,\n\n    // API state\n    isGenerating: api.isLoading,\n    error: api.errorMessage,\n    isOnline: api.isOnline,\n    canRetry: api.canRetry,\n\n    // Computed\n    canGenerate,\n\n    // Methods\n    setSizePreset,\n    generateSVG,\n    retryGeneration,\n    clearError,\n    clearResult,\n    resetParams,\n  };\n}\n","import { ref, computed } from \"vue\";\nimport { apiService } from \"../services/api\";\nimport { useErrorHandler } from \"./useErrorHandler\";\nimport type { GenerationRequest, GenerationResponse } from \"../types/api\";\n\nexport interface ApiState {\n  loading: boolean;\n  error: string | null;\n  isOnline: boolean;\n  lastResponse: GenerationResponse | null;\n}\n\nexport function useApi() {\n  const errorHandler = useErrorHandler();\n\n  const state = ref<ApiState>({\n    loading: false,\n    error: null,\n    isOnline: navigator.onLine,\n    lastResponse: null,\n  });\n\n  // Setup online/offline detection\n  const updateOnlineStatus = () => {\n    state.value.isOnline = navigator.onLine;\n  };\n\n  window.addEventListener(\"online\", updateOnlineStatus);\n  window.addEventListener(\"offline\", updateOnlineStatus);\n\n  // Add request interceptor for loading state\n  apiService.addRequestInterceptor((request) => {\n    state.value.loading = true;\n    state.value.error = null;\n    return request;\n  });\n\n  // Add response interceptor for loading state\n  apiService.addResponseInterceptor((response) => {\n    state.value.loading = false;\n    return response;\n  });\n\n  const generateSVG = async (\n    request: GenerationRequest\n  ): Promise<GenerationResponse | null> => {\n    try {\n      state.value.loading = true;\n      state.value.error = null;\n\n      const response = await apiService.generateSVG(request);\n      state.value.lastResponse = response;\n\n      // Show success message\n      errorHandler.showSuccess(\n        \"SVG Generated\",\n        \"Your SVG has been created successfully!\"\n      );\n\n      return response;\n    } catch (error) {\n      state.value.loading = false;\n\n      // Use centralized error handling\n      if (error instanceof Error) {\n        errorHandler.handleGenerationError(error, {\n          component: \"useApi\",\n          action: \"generateSVG\",\n          metadata: { request },\n        });\n\n        // Set simple error message for UI state\n        state.value.error = error.message;\n      }\n\n      return null;\n    } finally {\n      state.value.loading = false;\n    }\n  };\n\n  const checkHealth = async (): Promise<boolean> => {\n    try {\n      await apiService.healthCheck();\n      return true;\n    } catch {\n      return false;\n    }\n  };\n\n  const clearError = () => {\n    state.value.error = null;\n  };\n\n  const retry = async (\n    request: GenerationRequest\n  ): Promise<GenerationResponse | null> => {\n    // Clear previous error and retry\n    clearError();\n    return generateSVG(request);\n  };\n\n  // Computed properties for easy access\n  const isLoading = computed(() => state.value.loading);\n  const hasError = computed(() => !!state.value.error);\n  const errorMessage = computed(() => state.value.error);\n  const isOnline = computed(() => state.value.isOnline);\n  const canRetry = computed(\n    () =>\n      hasError.value &&\n      (state.value.error?.includes(\"network\") ||\n        state.value.error?.includes(\"timeout\") ||\n        state.value.error?.includes(\"server\"))\n  );\n\n  return {\n    // State\n    state: computed(() => state.value),\n    isLoading,\n    hasError,\n    errorMessage,\n    isOnline,\n    canRetry,\n    lastResponse: computed(() => state.value.lastResponse),\n\n    // Methods\n    generateSVG,\n    checkHealth,\n    clearError,\n    retry,\n  };\n}\n","import { ref, computed, reactive } from \"vue\";\nimport type { ValidationError } from \"./useErrorHandler\";\n\ninterface ValidationRule {\n  field: string;\n  isValid: boolean;\n  message?: string;\n  code?: string;\n}\n\ninterface FormField {\n  isValid: boolean;\n  message?: string;\n  code?: string;\n  isDirty: boolean;\n  isTouched: boolean;\n}\n\nexport function useFormValidation() {\n  // Form state\n  const fields = reactive<Record<string, FormField>>({});\n  const isSubmitting = ref(false);\n  const submitAttempted = ref(false);\n\n  // Computed properties\n  const isFormValid = computed(() => {\n    return Object.values(fields).every((field) => field.isValid);\n  });\n\n  const hasErrors = computed(() => {\n    return Object.values(fields).some(\n      (field) => !field.isValid && (field.isTouched || submitAttempted.value)\n    );\n  });\n\n  const errorCount = computed(() => {\n    return Object.values(fields).filter(\n      (field) => !field.isValid && (field.isTouched || submitAttempted.value)\n    ).length;\n  });\n\n  const fieldErrors = computed(() => {\n    const errors: Record<string, string> = {};\n    Object.entries(fields).forEach(([fieldName, field]) => {\n      if (\n        !field.isValid &&\n        (field.isTouched || submitAttempted.value) &&\n        field.message\n      ) {\n        errors[fieldName] = field.message;\n      }\n    });\n    return errors;\n  });\n\n  const validationErrors = computed((): ValidationError[] => {\n    return Object.entries(fields)\n      .filter(\n        ([_, field]) =>\n          !field.isValid &&\n          (field.isTouched || submitAttempted.value) &&\n          field.message\n      )\n      .map(([fieldName, field]) => ({\n        field: fieldName,\n        message: field.message!,\n        code: field.code,\n      }));\n  });\n\n  const allErrors = computed(() => {\n    return Object.values(fieldErrors.value);\n  });\n\n  // Methods\n  const registerField = (\n    fieldName: string,\n    initialState: Partial<FormField> = {}\n  ) => {\n    fields[fieldName] = {\n      isValid: true,\n      message: undefined,\n      isDirty: false,\n      isTouched: false,\n      ...initialState,\n    };\n  };\n\n  const updateFieldValidation = (\n    fieldName: string,\n    isValid: boolean,\n    message?: string,\n    code?: string\n  ) => {\n    if (!fields[fieldName]) {\n      registerField(fieldName);\n    }\n\n    fields[fieldName].isValid = isValid;\n    fields[fieldName].message = message;\n    fields[fieldName].code = code;\n\n    if (!isValid || message) {\n      fields[fieldName].isDirty = true;\n    }\n  };\n\n  const touchField = (fieldName: string) => {\n    if (fields[fieldName]) {\n      fields[fieldName].isTouched = true;\n    }\n  };\n\n  const markFieldDirty = (fieldName: string) => {\n    if (fields[fieldName]) {\n      fields[fieldName].isDirty = true;\n    }\n  };\n\n  const resetField = (fieldName: string) => {\n    if (fields[fieldName]) {\n      fields[fieldName] = {\n        isValid: true,\n        message: undefined,\n        code: undefined,\n        isDirty: false,\n        isTouched: false,\n      };\n    }\n  };\n\n  const resetForm = () => {\n    Object.keys(fields).forEach((fieldName) => {\n      resetField(fieldName);\n    });\n    isSubmitting.value = false;\n    submitAttempted.value = false;\n  };\n\n  const validateForm = (): boolean => {\n    submitAttempted.value = true;\n\n    // Touch all fields to show validation errors\n    Object.keys(fields).forEach((fieldName) => {\n      touchField(fieldName);\n    });\n\n    return isFormValid.value;\n  };\n\n  const setSubmitting = (submitting: boolean) => {\n    isSubmitting.value = submitting;\n  };\n\n  const getFieldState = (fieldName: string): FormField | null => {\n    return fields[fieldName] || null;\n  };\n\n  const shouldShowError = (fieldName: string): boolean => {\n    const field = fields[fieldName];\n    return field\n      ? !field.isValid && (field.isTouched || submitAttempted.value)\n      : false;\n  };\n\n  const getFieldError = (fieldName: string): string | undefined => {\n    const field = fields[fieldName];\n    return shouldShowError(fieldName) ? field?.message : undefined;\n  };\n\n  // Validation helpers\n  const createValidationHandler = (fieldName: string) => {\n    return (isValid: boolean, message?: string, code?: string) => {\n      updateFieldValidation(fieldName, isValid, message, code);\n    };\n  };\n\n  const createTouchHandler = (fieldName: string) => {\n    return () => {\n      touchField(fieldName);\n    };\n  };\n\n  const createInputHandler = (fieldName: string) => {\n    return () => {\n      markFieldDirty(fieldName);\n    };\n  };\n\n  // Batch validation\n  const validateFields = (rules: ValidationRule[]) => {\n    rules.forEach((rule) => {\n      updateFieldValidation(rule.field, rule.isValid, rule.message);\n    });\n  };\n\n  return {\n    // State\n    fields,\n    isSubmitting,\n    submitAttempted,\n\n    // Computed\n    isFormValid,\n    hasErrors,\n    errorCount,\n    fieldErrors,\n    validationErrors,\n    allErrors,\n\n    // Methods\n    registerField,\n    updateFieldValidation,\n    touchField,\n    markFieldDirty,\n    resetField,\n    resetForm,\n    validateForm,\n    setSubmitting,\n    getFieldState,\n    shouldShowError,\n    getFieldError,\n\n    // Helpers\n    createValidationHandler,\n    createTouchHandler,\n    createInputHandler,\n    validateFields,\n  };\n}\n","<template>\n  <div class=\"bg-white rounded-lg shadow-sm border border-gray-200\">\n    <!-- Header -->\n    <div class=\"flex items-center justify-between p-4 border-b border-gray-200\">\n      <h3 class=\"text-lg font-medium text-gray-900\">{{ title }}</h3>\n\n      <div class=\"flex items-center space-x-2\">\n        <!-- Zoom Controls -->\n        <div\n          v-if=\"svgContent && showZoomControls\"\n          class=\"flex items-center space-x-1 bg-gray-100 rounded-md p-1\"\n        >\n          <button\n            @click=\"zoomOut\"\n            :disabled=\"zoomLevel <= minZoom\"\n            class=\"p-1 text-gray-600 hover:text-gray-900 disabled:opacity-50 disabled:cursor-not-allowed\"\n            title=\"Zoom out\"\n          >\n            <svg\n              class=\"w-4 h-4\"\n              fill=\"none\"\n              stroke=\"currentColor\"\n              viewBox=\"0 0 24 24\"\n            >\n              <path\n                stroke-linecap=\"round\"\n                stroke-linejoin=\"round\"\n                stroke-width=\"2\"\n                d=\"M20 12H4\"\n              />\n            </svg>\n          </button>\n\n          <span class=\"text-xs text-gray-600 min-w-[3rem] text-center\">\n            {{ Math.round(zoomLevel * 100) }}%\n          </span>\n\n          <button\n            @click=\"zoomIn\"\n            :disabled=\"zoomLevel >= maxZoom\"\n            class=\"p-1 text-gray-600 hover:text-gray-900 disabled:opacity-50 disabled:cursor-not-allowed\"\n            title=\"Zoom in\"\n          >\n            <svg\n              class=\"w-4 h-4\"\n              fill=\"none\"\n              stroke=\"currentColor\"\n              viewBox=\"0 0 24 24\"\n            >\n              <path\n                stroke-linecap=\"round\"\n                stroke-linejoin=\"round\"\n                stroke-width=\"2\"\n                d=\"M12 4v16m8-8H4\"\n              />\n            </svg>\n          </button>\n\n          <button\n            @click=\"resetZoom\"\n            class=\"p-1 text-gray-600 hover:text-gray-900\"\n            title=\"Reset zoom\"\n          >\n            <svg\n              class=\"w-4 h-4\"\n              fill=\"none\"\n              stroke=\"currentColor\"\n              viewBox=\"0 0 24 24\"\n            >\n              <path\n                stroke-linecap=\"round\"\n                stroke-linejoin=\"round\"\n                stroke-width=\"2\"\n                d=\"M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15\"\n              />\n            </svg>\n          </button>\n        </div>\n\n        <!-- Fullscreen Toggle -->\n        <button\n          v-if=\"svgContent && showFullscreenButton\"\n          @click=\"toggleFullscreen\"\n          class=\"p-2 text-gray-600 hover:text-gray-900 transition-colors\"\n          title=\"Toggle fullscreen\"\n        >\n          <svg\n            v-if=\"!isFullscreen\"\n            class=\"w-4 h-4\"\n            fill=\"none\"\n            stroke=\"currentColor\"\n            viewBox=\"0 0 24 24\"\n          >\n            <path\n              stroke-linecap=\"round\"\n              stroke-linejoin=\"round\"\n              stroke-width=\"2\"\n              d=\"M4 8V4m0 0h4M4 4l5 5m11-1V4m0 0h-4m4 0l-5 5M4 16v4m0 0h4m-4 0l5-5m11 5l-5-5m5 5v-4m0 4h-4\"\n            />\n          </svg>\n          <svg\n            v-else\n            class=\"w-4 h-4\"\n            fill=\"none\"\n            stroke=\"currentColor\"\n            viewBox=\"0 0 24 24\"\n          >\n            <path\n              stroke-linecap=\"round\"\n              stroke-linejoin=\"round\"\n              stroke-width=\"2\"\n              d=\"M9 9V4.5M9 9H4.5M9 9L3.5 3.5M15 9v-4.5M15 9h4.5M15 9l5.5-5.5M9 15v4.5M9 15H4.5M9 15l-5.5 5.5M15 15v4.5M15 15h4.5m0 0l5.5 5.5\"\n            />\n          </svg>\n        </button>\n      </div>\n    </div>\n\n    <!-- Preview Content -->\n    <div\n      ref=\"previewContainer\"\n      :class=\"[\n        'relative overflow-hidden',\n        isFullscreen ? 'fixed inset-0 z-50 bg-white' : 'min-h-[300px]',\n      ]\"\n    >\n      <!-- Loading State -->\n      <div v-if=\"isLoading\" class=\"flex items-center justify-center h-64\">\n        <div class=\"text-center\">\n          <svg\n            class=\"animate-spin mx-auto h-8 w-8 text-blue-600 mb-4\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n            fill=\"none\"\n            viewBox=\"0 0 24 24\"\n          >\n            <circle\n              class=\"opacity-25\"\n              cx=\"12\"\n              cy=\"12\"\n              r=\"10\"\n              stroke=\"currentColor\"\n              stroke-width=\"4\"\n            ></circle>\n            <path\n              class=\"opacity-75\"\n              fill=\"currentColor\"\n              d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"\n            ></path>\n          </svg>\n          <p class=\"text-sm text-gray-600\">{{ loadingText }}</p>\n        </div>\n      </div>\n\n      <!-- Error State -->\n      <div v-else-if=\"error\" class=\"flex items-center justify-center h-64\">\n        <div class=\"text-center max-w-md mx-auto p-6\">\n          <svg\n            class=\"mx-auto h-12 w-12 text-red-400 mb-4\"\n            fill=\"none\"\n            stroke=\"currentColor\"\n            viewBox=\"0 0 24 24\"\n          >\n            <path\n              stroke-linecap=\"round\"\n              stroke-linejoin=\"round\"\n              stroke-width=\"2\"\n              d=\"M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-2.5L13.732 4c-.77-.833-1.964-.833-2.732 0L4.082 16.5c-.77.833.192 2.5 1.732 2.5z\"\n            />\n          </svg>\n          <h3 class=\"text-lg font-medium text-gray-900 mb-2\">Preview Error</h3>\n          <p class=\"text-sm text-gray-600 mb-4\">{{ error }}</p>\n          <button\n            v-if=\"showRetryButton\"\n            @click=\"$emit('retry')\"\n            class=\"inline-flex items-center px-3 py-2 border border-transparent text-sm leading-4 font-medium rounded-md text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500\"\n          >\n            <svg\n              class=\"w-4 h-4 mr-2\"\n              fill=\"none\"\n              stroke=\"currentColor\"\n              viewBox=\"0 0 24 24\"\n            >\n              <path\n                stroke-linecap=\"round\"\n                stroke-linejoin=\"round\"\n                stroke-width=\"2\"\n                d=\"M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15\"\n              />\n            </svg>\n            Try Again\n          </button>\n        </div>\n      </div>\n\n      <!-- Empty State -->\n      <div\n        v-else-if=\"!svgContent\"\n        class=\"flex items-center justify-center h-64\"\n      >\n        <div class=\"text-center\">\n          <svg\n            class=\"mx-auto h-12 w-12 text-gray-400 mb-4\"\n            stroke=\"currentColor\"\n            fill=\"none\"\n            viewBox=\"0 0 48 48\"\n          >\n            <path\n              d=\"M28 8H12a4 4 0 00-4 4v20m32-12v8m0 0v8a4 4 0 01-4 4H12a4 4 0 01-4-4v-4m32-4l-3.172-3.172a4 4 0 00-5.656 0L28 28M8 32l9.172-9.172a4 4 0 015.656 0L28 28m0 0l4 4m4-24h8m-4-4v8m-12 4h.02\"\n              stroke-width=\"2\"\n              stroke-linecap=\"round\"\n              stroke-linejoin=\"round\"\n            />\n          </svg>\n          <p class=\"text-sm text-gray-500\">{{ emptyStateText }}</p>\n        </div>\n      </div>\n\n      <!-- SVG Content -->\n      <div\n        v-else\n        ref=\"svgContainer\"\n        :class=\"[\n          'flex items-center justify-center p-4 transition-transform duration-200',\n          isFullscreen ? 'h-full' : 'min-h-[300px]',\n          enablePanning ? 'cursor-grab active:cursor-grabbing' : '',\n        ]\"\n        :style=\"containerStyle\"\n        @mousedown=\"startPanning\"\n        @mousemove=\"handlePanning\"\n        @mouseup=\"stopPanning\"\n        @mouseleave=\"stopPanning\"\n        @wheel=\"handleWheel\"\n      >\n        <div\n          ref=\"svgWrapper\"\n          :class=\"[\n            'relative transition-transform duration-200',\n            showBorder ? 'border border-gray-200 rounded' : '',\n            backgroundColor === 'transparent' ? 'bg-transparent' : '',\n            backgroundColor === 'white' ? 'bg-white' : '',\n            backgroundColor === 'gray' ? 'bg-gray-100' : '',\n            backgroundColor === 'dark' ? 'bg-gray-900' : '',\n          ]\"\n          :style=\"svgWrapperStyle\"\n          v-html=\"sanitizedSvgContent\"\n        />\n      </div>\n\n      <!-- Overlay Info -->\n      <div\n        v-if=\"svgContent && showOverlayInfo\"\n        class=\"absolute top-2 left-2 bg-black bg-opacity-75 text-white text-xs px-2 py-1 rounded\"\n      >\n        {{ svgDimensions }}\n      </div>\n    </div>\n\n    <!-- Footer with actions -->\n    <div\n      v-if=\"svgContent && showFooter\"\n      class=\"flex items-center justify-between p-4 border-t border-gray-200 bg-gray-50\"\n    >\n      <div class=\"text-sm text-gray-600\">\n        <span v-if=\"metadata\">\n          {{ metadata.width }}×{{ metadata.height }}px\n        </span>\n      </div>\n\n      <div class=\"flex items-center space-x-2\">\n        <slot name=\"footer-actions\" />\n      </div>\n    </div>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { ref, computed, watch, onMounted, onUnmounted } from \"vue\";\nimport type { SVGMetadata } from \"../types/api\";\n\ninterface Props {\n  svgContent?: string;\n  metadata?: SVGMetadata;\n  isLoading?: boolean;\n  error?: string;\n  title?: string;\n  loadingText?: string;\n  emptyStateText?: string;\n  showZoomControls?: boolean;\n  showFullscreenButton?: boolean;\n  showOverlayInfo?: boolean;\n  showFooter?: boolean;\n  showRetryButton?: boolean;\n  showBorder?: boolean;\n  enablePanning?: boolean;\n  enableWheelZoom?: boolean;\n  backgroundColor?: \"transparent\" | \"white\" | \"gray\" | \"dark\";\n  minZoom?: number;\n  maxZoom?: number;\n  zoomStep?: number;\n}\n\ninterface Emits {\n  (e: \"retry\"): void;\n  (e: \"fullscreenChange\", isFullscreen: boolean): void;\n  (e: \"zoomChange\", zoomLevel: number): void;\n}\n\nconst props = withDefaults(defineProps<Props>(), {\n  title: \"SVG Preview\",\n  loadingText: \"Generating SVG...\",\n  emptyStateText: \"No SVG to preview\",\n  showZoomControls: true,\n  showFullscreenButton: true,\n  showOverlayInfo: false,\n  showFooter: true,\n  showRetryButton: true,\n  showBorder: true,\n  enablePanning: true,\n  enableWheelZoom: true,\n  backgroundColor: \"white\",\n  minZoom: 0.1,\n  maxZoom: 5,\n  zoomStep: 0.1,\n});\n\nconst emit = defineEmits<Emits>();\n\n// Refs\nconst previewContainer = ref<HTMLElement>();\nconst svgContainer = ref<HTMLElement>();\nconst svgWrapper = ref<HTMLElement>();\n\n// State\nconst zoomLevel = ref(1);\nconst panX = ref(0);\nconst panY = ref(0);\nconst isPanning = ref(false);\nconst panStartX = ref(0);\nconst panStartY = ref(0);\nconst isFullscreen = ref(false);\n\n// Computed properties\nconst sanitizedSvgContent = computed(() => {\n  if (!props.svgContent) return \"\";\n\n  // Basic SVG sanitization - in production, use a proper sanitization library\n  const cleanSvg = props.svgContent\n    .replace(/<script\\b[^<]*(?:(?!<\\/script>)<[^<]*)*<\\/script>/gi, \"\")\n    .replace(/on\\w+=\"[^\"]*\"/gi, \"\")\n    .replace(/javascript:/gi, \"\");\n\n  return cleanSvg;\n});\n\nconst svgDimensions = computed(() => {\n  if (!props.metadata) return \"\";\n  return `${props.metadata.width}×${props.metadata.height}`;\n});\n\nconst containerStyle = computed(() => ({\n  transform: `scale(${zoomLevel.value}) translate(${panX.value}px, ${panY.value}px)`,\n}));\n\nconst svgWrapperStyle = computed(() => ({\n  maxWidth: \"100%\",\n  maxHeight: \"100%\",\n}));\n\n// Methods\nconst zoomIn = () => {\n  if (zoomLevel.value < props.maxZoom) {\n    zoomLevel.value = Math.min(props.maxZoom, zoomLevel.value + props.zoomStep);\n    emit(\"zoomChange\", zoomLevel.value);\n  }\n};\n\nconst zoomOut = () => {\n  if (zoomLevel.value > props.minZoom) {\n    zoomLevel.value = Math.max(props.minZoom, zoomLevel.value - props.zoomStep);\n    emit(\"zoomChange\", zoomLevel.value);\n  }\n};\n\nconst resetZoom = () => {\n  zoomLevel.value = 1;\n  panX.value = 0;\n  panY.value = 0;\n  emit(\"zoomChange\", zoomLevel.value);\n};\n\nconst toggleFullscreen = () => {\n  isFullscreen.value = !isFullscreen.value;\n  emit(\"fullscreenChange\", isFullscreen.value);\n\n  if (isFullscreen.value) {\n    document.body.style.overflow = \"hidden\";\n  } else {\n    document.body.style.overflow = \"\";\n  }\n};\n\nconst startPanning = (event: MouseEvent) => {\n  if (!props.enablePanning) return;\n\n  isPanning.value = true;\n  panStartX.value = event.clientX - panX.value;\n  panStartY.value = event.clientY - panY.value;\n  event.preventDefault();\n};\n\nconst handlePanning = (event: MouseEvent) => {\n  if (!isPanning.value || !props.enablePanning) return;\n\n  panX.value = event.clientX - panStartX.value;\n  panY.value = event.clientY - panStartY.value;\n  event.preventDefault();\n};\n\nconst stopPanning = () => {\n  isPanning.value = false;\n};\n\nconst handleWheel = (event: WheelEvent) => {\n  if (!props.enableWheelZoom) return;\n\n  event.preventDefault();\n\n  const delta = event.deltaY > 0 ? -props.zoomStep : props.zoomStep;\n  const newZoom = Math.max(\n    props.minZoom,\n    Math.min(props.maxZoom, zoomLevel.value + delta)\n  );\n\n  if (newZoom !== zoomLevel.value) {\n    zoomLevel.value = newZoom;\n    emit(\"zoomChange\", zoomLevel.value);\n  }\n};\n\nconst handleKeydown = (event: KeyboardEvent) => {\n  if (isFullscreen.value && event.key === \"Escape\") {\n    toggleFullscreen();\n  }\n};\n\n// Lifecycle\nonMounted(() => {\n  document.addEventListener(\"keydown\", handleKeydown);\n});\n\nonUnmounted(() => {\n  document.removeEventListener(\"keydown\", handleKeydown);\n  if (isFullscreen.value) {\n    document.body.style.overflow = \"\";\n  }\n});\n\n// Watch for content changes to reset zoom/pan\nwatch(\n  () => props.svgContent,\n  () => {\n    resetZoom();\n  }\n);\n</script>\n","export class ClipboardError extends Error {\n  constructor(message: string) {\n    super(message);\n    this.name = \"ClipboardError\";\n  }\n}\n\nexport async function copyToClipboard(text: string): Promise<void> {\n  try {\n    // Modern clipboard API\n    if (navigator.clipboard && window.isSecureContext) {\n      await navigator.clipboard.writeText(text);\n      return;\n    }\n\n    // Fallback for older browsers or non-secure contexts\n    const textArea = document.createElement(\"textarea\");\n    textArea.value = text;\n    textArea.style.position = \"fixed\";\n    textArea.style.left = \"-999999px\";\n    textArea.style.top = \"-999999px\";\n    document.body.appendChild(textArea);\n\n    textArea.focus();\n    textArea.select();\n\n    const successful = document.execCommand(\"copy\");\n    document.body.removeChild(textArea);\n\n    if (!successful) {\n      throw new ClipboardError(\"Failed to copy text using fallback method\");\n    }\n  } catch (error) {\n    if (error instanceof ClipboardError) {\n      throw error;\n    }\n\n    throw new ClipboardError(\n      error instanceof Error ? error.message : \"Failed to copy to clipboard\"\n    );\n  }\n}\n\nexport async function readFromClipboard(): Promise<string> {\n  try {\n    if (navigator.clipboard && window.isSecureContext) {\n      return await navigator.clipboard.readText();\n    }\n\n    throw new ClipboardError(\n      \"Clipboard read not supported in this environment\"\n    );\n  } catch (error) {\n    throw new ClipboardError(\n      error instanceof Error ? error.message : \"Failed to read from clipboard\"\n    );\n  }\n}\n","<template>\n  <div class=\"bg-white rounded-lg shadow-sm border border-gray-200\">\n    <!-- Header -->\n    <div class=\"flex items-center justify-between p-4 border-b border-gray-200\">\n      <h3 class=\"text-lg font-medium text-gray-900\">{{ title }}</h3>\n\n      <div class=\"flex items-center space-x-2\">\n        <!-- Format Selection -->\n        <select\n          v-if=\"showFormatSelector\"\n          v-model=\"selectedFormat\"\n          class=\"text-sm border border-gray-300 rounded-md px-2 py-1 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\n        >\n          <option value=\"svg\">SVG</option>\n          <option value=\"optimized\">Optimized SVG</option>\n          <option value=\"minified\">Minified SVG</option>\n        </select>\n\n        <!-- Copy Button -->\n        <button\n          @click=\"copyCode\"\n          :disabled=\"!svgCode || isCopying\"\n          class=\"inline-flex items-center px-3 py-2 border border-gray-300 shadow-sm text-sm leading-4 font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 disabled:opacity-50 disabled:cursor-not-allowed transition-colors\"\n        >\n          <svg\n            v-if=\"!isCopying && !copySuccess\"\n            class=\"w-4 h-4 mr-2\"\n            fill=\"none\"\n            stroke=\"currentColor\"\n            viewBox=\"0 0 24 24\"\n          >\n            <path\n              stroke-linecap=\"round\"\n              stroke-linejoin=\"round\"\n              stroke-width=\"2\"\n              d=\"M8 16H6a2 2 0 01-2-2V6a2 2 0 012-2h8a2 2 0 012 2v2m-6 12h8a2 2 0 002-2v-8a2 2 0 00-2-2h-8a2 2 0 00-2 2v8a2 2 0 002 2z\"\n            />\n          </svg>\n\n          <svg\n            v-else-if=\"copySuccess\"\n            class=\"w-4 h-4 mr-2 text-green-600\"\n            fill=\"none\"\n            stroke=\"currentColor\"\n            viewBox=\"0 0 24 24\"\n          >\n            <path\n              stroke-linecap=\"round\"\n              stroke-linejoin=\"round\"\n              stroke-width=\"2\"\n              d=\"M5 13l4 4L19 7\"\n            />\n          </svg>\n\n          <svg\n            v-else\n            class=\"w-4 h-4 mr-2 animate-spin\"\n            fill=\"none\"\n            viewBox=\"0 0 24 24\"\n          >\n            <circle\n              class=\"opacity-25\"\n              cx=\"12\"\n              cy=\"12\"\n              r=\"10\"\n              stroke=\"currentColor\"\n              stroke-width=\"4\"\n            ></circle>\n            <path\n              class=\"opacity-75\"\n              fill=\"currentColor\"\n              d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"\n            ></path>\n          </svg>\n\n          {{ copyButtonText }}\n        </button>\n\n        <!-- Download Button -->\n        <button\n          v-if=\"showDownloadButton\"\n          @click=\"downloadSVG\"\n          :disabled=\"!svgCode\"\n          class=\"inline-flex items-center px-3 py-2 border border-transparent text-sm leading-4 font-medium rounded-md text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 disabled:opacity-50 disabled:cursor-not-allowed transition-colors\"\n        >\n          <svg\n            class=\"w-4 h-4 mr-2\"\n            fill=\"none\"\n            stroke=\"currentColor\"\n            viewBox=\"0 0 24 24\"\n          >\n            <path\n              stroke-linecap=\"round\"\n              stroke-linejoin=\"round\"\n              stroke-width=\"2\"\n              d=\"M12 10v6m0 0l-3-3m3 3l3-3m2 8H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z\"\n            />\n          </svg>\n          Download\n        </button>\n      </div>\n    </div>\n\n    <!-- Code Display -->\n    <div class=\"relative\">\n      <!-- Empty State -->\n      <div\n        v-if=\"!svgCode\"\n        class=\"flex items-center justify-center h-48 text-gray-500\"\n      >\n        <div class=\"text-center\">\n          <svg\n            class=\"mx-auto h-12 w-12 text-gray-400 mb-4\"\n            fill=\"none\"\n            stroke=\"currentColor\"\n            viewBox=\"0 0 24 24\"\n          >\n            <path\n              stroke-linecap=\"round\"\n              stroke-linejoin=\"round\"\n              stroke-width=\"2\"\n              d=\"M10 20l4-16m4 4l4 4-4 4M6 16l-4-4 4-4\"\n            />\n          </svg>\n          <p class=\"text-sm\">{{ emptyStateText }}</p>\n        </div>\n      </div>\n\n      <!-- Code Content -->\n      <div v-else class=\"relative\">\n        <!-- Line Numbers -->\n        <div\n          v-if=\"showLineNumbers\"\n          class=\"absolute left-0 top-0 bottom-0 w-12 bg-gray-50 border-r border-gray-200 text-xs text-gray-500 font-mono select-none\"\n        >\n          <div class=\"p-4 space-y-0 leading-6\">\n            <div v-for=\"n in lineCount\" :key=\"n\" class=\"text-right pr-2\">\n              {{ n }}\n            </div>\n          </div>\n        </div>\n\n        <!-- Code -->\n        <div\n          :class=\"[\n            'overflow-auto max-h-96 bg-gray-900 text-gray-100',\n            showLineNumbers ? 'pl-12' : '',\n          ]\"\n        >\n          <pre\n            class=\"p-4 text-sm font-mono leading-6\"\n          ><code v-html=\"highlightedCode\"></code></pre>\n        </div>\n\n        <!-- Copy Overlay -->\n        <div\n          v-if=\"copySuccess\"\n          class=\"absolute inset-0 bg-green-500 bg-opacity-10 flex items-center justify-center transition-opacity duration-300\"\n        >\n          <div class=\"bg-green-600 text-white px-4 py-2 rounded-lg shadow-lg\">\n            <div class=\"flex items-center\">\n              <svg\n                class=\"w-5 h-5 mr-2\"\n                fill=\"none\"\n                stroke=\"currentColor\"\n                viewBox=\"0 0 24 24\"\n              >\n                <path\n                  stroke-linecap=\"round\"\n                  stroke-linejoin=\"round\"\n                  stroke-width=\"2\"\n                  d=\"M5 13l4 4L19 7\"\n                />\n              </svg>\n              Copied to clipboard!\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <!-- Footer with Stats -->\n    <div\n      v-if=\"svgCode && showFooter\"\n      class=\"flex items-center justify-between p-4 border-t border-gray-200 bg-gray-50 text-sm text-gray-600\"\n    >\n      <div class=\"flex items-center space-x-4\">\n        <span>{{ lineCount }} lines</span>\n        <span>{{ characterCount }} characters</span>\n        <span v-if=\"fileSize\">{{ fileSize }}</span>\n      </div>\n\n      <div v-if=\"optimizationInfo\" class=\"text-xs\">\n        <span\n          v-if=\"optimizationInfo.originalSize && optimizationInfo.optimizedSize\"\n          class=\"text-green-600\"\n        >\n          {{ optimizationInfo.savings }}% smaller\n        </span>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { ref, computed, watch } from \"vue\";\nimport { copyToClipboard, ClipboardError } from \"../utils/clipboard\";\n\ninterface OptimizationInfo {\n  originalSize: number;\n  optimizedSize: number;\n  savings: number;\n}\n\ninterface Props {\n  svgCode?: string;\n  title?: string;\n  emptyStateText?: string;\n  showLineNumbers?: boolean;\n  showFormatSelector?: boolean;\n  showDownloadButton?: boolean;\n  showFooter?: boolean;\n  filename?: string;\n  optimizationInfo?: OptimizationInfo;\n}\n\ninterface Emits {\n  (e: \"copy\", code: string, format: string): void;\n  (e: \"download\", code: string, format: string, filename: string): void;\n  (e: \"formatChange\", format: string): void;\n  (e: \"error\", error: string): void;\n}\n\nconst props = withDefaults(defineProps<Props>(), {\n  title: \"SVG Code\",\n  emptyStateText: \"No SVG code to display\",\n  showLineNumbers: true,\n  showFormatSelector: true,\n  showDownloadButton: true,\n  showFooter: true,\n  filename: \"generated.svg\",\n});\n\nconst emit = defineEmits<Emits>();\n\n// State\nconst selectedFormat = ref<\"svg\" | \"optimized\" | \"minified\">(\"svg\");\nconst isCopying = ref(false);\nconst copySuccess = ref(false);\n\n// Computed properties\nconst processedCode = computed(() => {\n  if (!props.svgCode) return \"\";\n\n  switch (selectedFormat.value) {\n    case \"optimized\":\n      return optimizeSVG(props.svgCode);\n    case \"minified\":\n      return minifySVG(props.svgCode);\n    default:\n      return props.svgCode;\n  }\n});\n\nconst highlightedCode = computed(() => {\n  if (!processedCode.value) return \"\";\n  return highlightSVG(processedCode.value);\n});\n\nconst lineCount = computed(() => {\n  if (!processedCode.value) return 0;\n  return processedCode.value.split(\"\\n\").length;\n});\n\nconst characterCount = computed(() => {\n  return processedCode.value.length;\n});\n\nconst fileSize = computed(() => {\n  if (!processedCode.value) return null;\n  const bytes = new Blob([processedCode.value]).size;\n\n  if (bytes < 1024) return `${bytes} B`;\n  if (bytes < 1024 * 1024) return `${(bytes / 1024).toFixed(1)} KB`;\n  return `${(bytes / (1024 * 1024)).toFixed(1)} MB`;\n});\n\nconst copyButtonText = computed(() => {\n  if (copySuccess.value) return \"Copied!\";\n  if (isCopying.value) return \"Copying...\";\n  return \"Copy Code\";\n});\n\n// Watch for format changes\nwatch(selectedFormat, (newFormat) => {\n  emit(\"formatChange\", newFormat);\n});\n\n// Methods\nconst copyCode = async () => {\n  if (!processedCode.value || isCopying.value) return;\n\n  isCopying.value = true;\n\n  try {\n    await copyToClipboard(processedCode.value);\n    copySuccess.value = true;\n    emit(\"copy\", processedCode.value, selectedFormat.value);\n\n    setTimeout(() => {\n      copySuccess.value = false;\n    }, 2000);\n  } catch (error) {\n    console.error(\"Copy failed:\", error);\n    const errorMessage =\n      error instanceof ClipboardError\n        ? error.message\n        : \"Failed to copy to clipboard\";\n    emit(\"error\", errorMessage);\n  } finally {\n    isCopying.value = false;\n  }\n};\n\nconst downloadSVG = () => {\n  if (!processedCode.value) return;\n\n  try {\n    const blob = new Blob([processedCode.value], { type: \"image/svg+xml\" });\n    const url = URL.createObjectURL(blob);\n\n    const link = document.createElement(\"a\");\n    link.href = url;\n    link.download = getFilename();\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n\n    URL.revokeObjectURL(url);\n\n    emit(\"download\", processedCode.value, selectedFormat.value, getFilename());\n  } catch (error) {\n    console.error(\"Download failed:\", error);\n    emit(\"error\", \"Failed to download file\");\n  }\n};\n\nconst getFilename = (): string => {\n  const base = props.filename.replace(/\\.svg$/, \"\");\n  const suffix =\n    selectedFormat.value === \"svg\" ? \"\" : `-${selectedFormat.value}`;\n  return `${base}${suffix}.svg`;\n};\n\n// SVG Processing Functions\nconst optimizeSVG = (svg: string): string => {\n  // Basic SVG optimization\n  return svg\n    .replace(/\\s+/g, \" \") // Normalize whitespace\n    .replace(/>\\s+</g, \"><\") // Remove whitespace between tags\n    .replace(/\\s*=\\s*/g, \"=\") // Remove whitespace around equals\n    .replace(/\"\\s+/g, '\" ') // Normalize attribute spacing\n    .trim();\n};\n\nconst minifySVG = (svg: string): string => {\n  // Aggressive minification\n  return svg\n    .replace(/\\s+/g, \" \")\n    .replace(/>\\s+</g, \"><\")\n    .replace(/\\s*=\\s*/g, \"=\")\n    .replace(/\"\\s+/g, '\"')\n    .replace(/\\s*\\/>/g, \"/>\")\n    .replace(/;\\s*/g, \";\")\n    .replace(/:\\s*/g, \":\")\n    .replace(/,\\s*/g, \",\")\n    .trim();\n};\n\nconst highlightSVG = (svg: string): string => {\n  // Basic syntax highlighting for SVG\n  return svg\n    .replace(/&/g, \"&amp;\")\n    .replace(/</g, \"&lt;\")\n    .replace(/>/g, \"&gt;\")\n    .replace(/(\".*?\")/g, '<span class=\"text-green-400\">$1</span>') // Attribute values\n    .replace(/(&lt;\\/?)([\\w-]+)/g, '$1<span class=\"text-blue-400\">$2</span>') // Tag names\n    .replace(/([\\w-]+)(?==)/g, '<span class=\"text-yellow-400\">$1</span>') // Attribute names\n    .replace(/(&lt;!--.*?--&gt;)/g, '<span class=\"text-gray-500\">$1</span>'); // Comments\n};\n</script>\n\n<style scoped>\n/* Custom scrollbar for code area */\n.overflow-auto::-webkit-scrollbar {\n  width: 8px;\n  height: 8px;\n}\n\n.overflow-auto::-webkit-scrollbar-track {\n  background: #374151;\n}\n\n.overflow-auto::-webkit-scrollbar-thumb {\n  background: #6b7280;\n  border-radius: 4px;\n}\n\n.overflow-auto::-webkit-scrollbar-thumb:hover {\n  background: #9ca3af;\n}\n</style>\n","<template>\n  <div class=\"bg-white rounded-lg shadow-sm border border-gray-200\">\n    <!-- Header -->\n    <div class=\"flex items-center justify-between p-4 border-b border-gray-200\">\n      <h3 class=\"text-lg font-medium text-gray-900\">{{ title }}</h3>\n\n      <button\n        v-if=\"collapsible\"\n        @click=\"isCollapsed = !isCollapsed\"\n        class=\"p-1 text-gray-400 hover:text-gray-600 transition-colors\"\n      >\n        <svg\n          :class=\"[\n            'w-5 h-5 transition-transform',\n            isCollapsed ? '' : 'rotate-180',\n          ]\"\n          fill=\"none\"\n          stroke=\"currentColor\"\n          viewBox=\"0 0 24 24\"\n        >\n          <path\n            stroke-linecap=\"round\"\n            stroke-linejoin=\"round\"\n            stroke-width=\"2\"\n            d=\"M19 9l-7 7-7-7\"\n          />\n        </svg>\n      </button>\n    </div>\n\n    <!-- Content -->\n    <div v-if=\"!isCollapsed\" class=\"p-4 space-y-4\">\n      <!-- Basic Properties -->\n      <div v-if=\"metadata\" class=\"space-y-3\">\n        <h4 class=\"text-sm font-medium text-gray-900\">Properties</h4>\n\n        <div class=\"grid grid-cols-2 gap-4 text-sm\">\n          <div class=\"space-y-2\">\n            <div class=\"flex justify-between\">\n              <span class=\"text-gray-600\">Width:</span>\n              <span class=\"font-mono text-gray-900\"\n                >{{ metadata.width }}px</span\n              >\n            </div>\n\n            <div class=\"flex justify-between\">\n              <span class=\"text-gray-600\">Height:</span>\n              <span class=\"font-mono text-gray-900\"\n                >{{ metadata.height }}px</span\n              >\n            </div>\n\n            <div class=\"flex justify-between\">\n              <span class=\"text-gray-600\">Aspect Ratio:</span>\n              <span class=\"font-mono text-gray-900\">{{ aspectRatio }}</span>\n            </div>\n\n            <div v-if=\"metadata.seed\" class=\"flex justify-between\">\n              <span class=\"text-gray-600\">Seed:</span>\n              <span class=\"font-mono text-gray-900\">{{ metadata.seed }}</span>\n            </div>\n          </div>\n\n          <div class=\"space-y-2\">\n            <div class=\"flex justify-between\">\n              <span class=\"text-gray-600\">ViewBox:</span>\n              <span class=\"font-mono text-gray-900 text-xs\">{{\n                metadata.viewBox\n              }}</span>\n            </div>\n\n            <div class=\"flex justify-between\">\n              <span class=\"text-gray-600\">Background:</span>\n              <div class=\"flex items-center space-x-2\">\n                <div\n                  class=\"w-4 h-4 rounded border border-gray-300\"\n                  :style=\"{ backgroundColor: metadata.backgroundColor }\"\n                />\n                <span class=\"font-mono text-gray-900 text-xs\">{{\n                  metadata.backgroundColor\n                }}</span>\n              </div>\n            </div>\n\n            <div class=\"flex justify-between\">\n              <span class=\"text-gray-600\">Colors:</span>\n              <span class=\"text-gray-900\">{{ metadata.palette.length }}</span>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <!-- Color Palette -->\n      <div\n        v-if=\"metadata?.palette && metadata.palette.length > 0\"\n        class=\"space-y-3\"\n      >\n        <h4 class=\"text-sm font-medium text-gray-900\">Color Palette</h4>\n\n        <div class=\"flex flex-wrap gap-2\">\n          <div\n            v-for=\"(color, index) in metadata.palette\"\n            :key=\"index\"\n            class=\"flex items-center space-x-2 bg-gray-50 rounded-lg px-3 py-2\"\n          >\n            <div\n              class=\"w-5 h-5 rounded border border-gray-300\"\n              :style=\"{ backgroundColor: color }\"\n            />\n            <span class=\"font-mono text-xs text-gray-700\">{{ color }}</span>\n            <button\n              @click=\"copyColor(color)\"\n              class=\"text-gray-400 hover:text-gray-600 transition-colors\"\n              :title=\"`Copy ${color}`\"\n            >\n              <svg\n                class=\"w-3 h-3\"\n                fill=\"none\"\n                stroke=\"currentColor\"\n                viewBox=\"0 0 24 24\"\n              >\n                <path\n                  stroke-linecap=\"round\"\n                  stroke-linejoin=\"round\"\n                  stroke-width=\"2\"\n                  d=\"M8 16H6a2 2 0 01-2-2V6a2 2 0 012-2h8a2 2 0 012 2v2m-6 12h8a2 2 0 002-2v-8a2 2 0 00-2-2h-8a2 2 0 00-2 2v8a2 2 0 002 2z\"\n                />\n              </svg>\n            </button>\n          </div>\n        </div>\n      </div>\n\n      <!-- Layer Information -->\n      <div v-if=\"layers && layers.length > 0\" class=\"space-y-3\">\n        <div class=\"flex items-center justify-between\">\n          <h4 class=\"text-sm font-medium text-gray-900\">\n            Layers ({{ layers.length }})\n          </h4>\n\n          <button\n            @click=\"showAllLayers = !showAllLayers\"\n            class=\"text-xs text-blue-600 hover:text-blue-800 transition-colors\"\n          >\n            {{ showAllLayers ? \"Show Less\" : \"Show All\" }}\n          </button>\n        </div>\n\n        <div class=\"space-y-2 max-h-48 overflow-y-auto\">\n          <div\n            v-for=\"layer in displayedLayers\"\n            :key=\"layer.id\"\n            class=\"flex items-center space-x-3 p-2 bg-gray-50 rounded-lg\"\n          >\n            <!-- Layer Type Icon -->\n            <div class=\"flex-shrink-0\">\n              <svg\n                v-if=\"layer.type === 'shape'\"\n                class=\"w-4 h-4 text-blue-500\"\n                fill=\"currentColor\"\n                viewBox=\"0 0 20 20\"\n              >\n                <path\n                  fill-rule=\"evenodd\"\n                  d=\"M4 3a2 2 0 00-2 2v10a2 2 0 002 2h12a2 2 0 002-2V5a2 2 0 00-2-2H4zm12 12H4l4-8 3 6 2-4 3 6z\"\n                  clip-rule=\"evenodd\"\n                />\n              </svg>\n\n              <svg\n                v-else-if=\"layer.type === 'text'\"\n                class=\"w-4 h-4 text-green-500\"\n                fill=\"currentColor\"\n                viewBox=\"0 0 20 20\"\n              >\n                <path\n                  fill-rule=\"evenodd\"\n                  d=\"M4 4a1 1 0 011-1h10a1 1 0 110 2H9v10a1 1 0 11-2 0V5H5a1 1 0 01-1-1z\"\n                  clip-rule=\"evenodd\"\n                />\n              </svg>\n\n              <svg\n                v-else-if=\"layer.type === 'group'\"\n                class=\"w-4 h-4 text-purple-500\"\n                fill=\"currentColor\"\n                viewBox=\"0 0 20 20\"\n              >\n                <path\n                  d=\"M7 3a1 1 0 000 2h6a1 1 0 100-2H7zM4 7a1 1 0 011-1h10a1 1 0 110 2H5a1 1 0 01-1-1zM2 11a2 2 0 012-2h12a2 2 0 012 2v4a2 2 0 01-2 2H4a2 2 0 01-2-2v-4z\"\n                />\n              </svg>\n\n              <svg\n                v-else\n                class=\"w-4 h-4 text-gray-500\"\n                fill=\"currentColor\"\n                viewBox=\"0 0 20 20\"\n              >\n                <path\n                  fill-rule=\"evenodd\"\n                  d=\"M3 4a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1zm0 4a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1zm0 4a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1z\"\n                  clip-rule=\"evenodd\"\n                />\n              </svg>\n            </div>\n\n            <!-- Layer Info -->\n            <div class=\"flex-1 min-w-0\">\n              <div class=\"flex items-center justify-between\">\n                <p class=\"text-sm font-medium text-gray-900 truncate\">\n                  {{ layer.label }}\n                </p>\n                <span class=\"text-xs text-gray-500 capitalize\">{{\n                  layer.type\n                }}</span>\n              </div>\n              <p class=\"text-xs text-gray-500 font-mono\">{{ layer.id }}</p>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <!-- Statistics -->\n      <div v-if=\"showStatistics && statistics\" class=\"space-y-3\">\n        <h4 class=\"text-sm font-medium text-gray-900\">Statistics</h4>\n\n        <div class=\"grid grid-cols-2 gap-4 text-sm\">\n          <div class=\"space-y-2\">\n            <div class=\"flex justify-between\">\n              <span class=\"text-gray-600\">Elements:</span>\n              <span class=\"text-gray-900\">{{ statistics.elementCount }}</span>\n            </div>\n\n            <div class=\"flex justify-between\">\n              <span class=\"text-gray-600\">Has Groups:</span>\n              <span class=\"text-gray-900\">{{\n                statistics.hasGroups ? \"Yes\" : \"No\"\n              }}</span>\n            </div>\n          </div>\n\n          <div class=\"space-y-2\">\n            <div class=\"flex justify-between\">\n              <span class=\"text-gray-600\">Has Text:</span>\n              <span class=\"text-gray-900\">{{\n                statistics.hasText ? \"Yes\" : \"No\"\n              }}</span>\n            </div>\n\n            <div class=\"flex justify-between\">\n              <span class=\"text-gray-600\">Complexity:</span>\n              <span\n                :class=\"[\n                  'capitalize px-2 py-0.5 rounded text-xs font-medium',\n                  statistics.complexity === 'simple'\n                    ? 'bg-green-100 text-green-800'\n                    : statistics.complexity === 'moderate'\n                      ? 'bg-yellow-100 text-yellow-800'\n                      : 'bg-red-100 text-red-800',\n                ]\"\n              >\n                {{ statistics.complexity }}\n              </span>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <!-- Description -->\n      <div v-if=\"metadata?.description\" class=\"space-y-3\">\n        <h4 class=\"text-sm font-medium text-gray-900\">Description</h4>\n        <p class=\"text-sm text-gray-600 bg-gray-50 rounded-lg p-3\">\n          {{ metadata.description }}\n        </p>\n      </div>\n\n      <!-- Custom Content Slot -->\n      <div v-if=\"$slots.default\">\n        <slot />\n      </div>\n    </div>\n\n    <!-- Copy Notification -->\n    <div\n      v-if=\"showCopyNotification\"\n      class=\"fixed bottom-4 right-4 bg-green-600 text-white px-4 py-2 rounded-lg shadow-lg z-50 transition-opacity duration-300\"\n    >\n      Color copied to clipboard!\n    </div>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { ref, computed } from \"vue\";\nimport type { SVGMetadata, LayerInfo } from \"../types/api\";\nimport { copyToClipboard } from \"../utils/clipboard\";\n\ninterface Statistics {\n  elementCount: number;\n  hasGroups: boolean;\n  hasText: boolean;\n  colorCount: number;\n  complexity: \"simple\" | \"moderate\" | \"complex\";\n}\n\ninterface Props {\n  metadata?: SVGMetadata;\n  layers?: LayerInfo[];\n  statistics?: Statistics;\n  title?: string;\n  collapsible?: boolean;\n  showStatistics?: boolean;\n  maxLayersShown?: number;\n}\n\nconst props = withDefaults(defineProps<Props>(), {\n  title: \"SVG Information\",\n  collapsible: true,\n  showStatistics: true,\n  maxLayersShown: 5,\n});\n\n// State\nconst isCollapsed = ref(false);\nconst showAllLayers = ref(false);\nconst showCopyNotification = ref(false);\n\n// Computed properties\nconst aspectRatio = computed(() => {\n  if (!props.metadata) return \"1:1\";\n\n  const { width, height } = props.metadata;\n  if (width === height) return \"1:1\";\n\n  const gcd = (a: number, b: number): number => (b === 0 ? a : gcd(b, a % b));\n  const divisor = gcd(width, height);\n  const ratioW = width / divisor;\n  const ratioH = height / divisor;\n\n  // Simplify common ratios\n  if (ratioW === 16 && ratioH === 9) return \"16:9\";\n  if (ratioW === 4 && ratioH === 3) return \"4:3\";\n  if (ratioW === 3 && ratioH === 2) return \"3:2\";\n\n  return `${ratioW}:${ratioH}`;\n});\n\nconst displayedLayers = computed(() => {\n  if (!props.layers) return [];\n\n  if (showAllLayers.value || props.layers.length <= props.maxLayersShown) {\n    return props.layers;\n  }\n\n  return props.layers.slice(0, props.maxLayersShown);\n});\n\n// Methods\nconst copyColor = async (color: string) => {\n  try {\n    await copyToClipboard(color);\n    showCopyNotification.value = true;\n\n    setTimeout(() => {\n      showCopyNotification.value = false;\n    }, 2000);\n  } catch (error) {\n    console.error(\"Failed to copy color:\", error);\n  }\n};\n</script>\n","<template>\n  <div :class=\"iconClasses\">\n    <!-- Shape Icon -->\n    <svg\n      v-if=\"type === 'shape'\"\n      class=\"w-4 h-4\"\n      fill=\"currentColor\"\n      viewBox=\"0 0 20 20\"\n    >\n      <path\n        fill-rule=\"evenodd\"\n        d=\"M4 3a2 2 0 00-2 2v10a2 2 0 002 2h12a2 2 0 002-2V5a2 2 0 00-2-2H4zm12 12H4l4-8 3 6 2-4 3 6z\"\n        clip-rule=\"evenodd\"\n      />\n    </svg>\n\n    <!-- Text Icon -->\n    <svg\n      v-else-if=\"type === 'text'\"\n      class=\"w-4 h-4\"\n      fill=\"currentColor\"\n      viewBox=\"0 0 20 20\"\n    >\n      <path\n        fill-rule=\"evenodd\"\n        d=\"M4 4a1 1 0 011-1h10a1 1 0 110 2H9v10a1 1 0 11-2 0V5H5a1 1 0 01-1-1z\"\n        clip-rule=\"evenodd\"\n      />\n    </svg>\n\n    <!-- Group Icon -->\n    <svg\n      v-else-if=\"type === 'group'\"\n      class=\"w-4 h-4\"\n      fill=\"currentColor\"\n      viewBox=\"0 0 20 20\"\n    >\n      <path\n        d=\"M7 3a1 1 0 000 2h6a1 1 0 100-2H7zM4 7a1 1 0 011-1h10a1 1 0 110 2H5a1 1 0 01-1-1zM2 11a2 2 0 012-2h12a2 2 0 012 2v4a2 2 0 01-2 2H4a2 2 0 01-2-2v-4z\"\n      />\n    </svg>\n\n    <!-- Path Icon -->\n    <svg\n      v-else-if=\"type === 'path'\"\n      class=\"w-4 h-4\"\n      fill=\"currentColor\"\n      viewBox=\"0 0 20 20\"\n    >\n      <path\n        fill-rule=\"evenodd\"\n        d=\"M12.395 2.553a1 1 0 00-1.45-.385c-.345.23-.614.558-.822.88-.214.33-.403.713-.57 1.116-.334.804-.614 1.768-.84 2.734a31.365 31.365 0 00-.613 3.58 2.64 2.64 0 01-.945-1.067c-.328-.68-.398-1.534-.398-2.654A1 1 0 005.05 6.05 6.981 6.981 0 003 11a7 7 0 1011.95-4.95c-.592-.591-.98-.985-1.348-1.467-.363-.476-.724-1.063-1.207-2.03zM12.12 15.12A3 3 0 017 13s.879.5 2.5.5c0-1 .5-4 1.25-4.5.5 1 .786 1.293 1.371 1.879A2.99 2.99 0 0113 13a2.99 2.99 0 01-.879 2.121z\"\n        clip-rule=\"evenodd\"\n      />\n    </svg>\n\n    <!-- Default/Unknown Icon -->\n    <svg v-else class=\"w-4 h-4\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n      <path\n        fill-rule=\"evenodd\"\n        d=\"M3 4a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1zm0 4a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1zm0 4a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1z\"\n        clip-rule=\"evenodd\"\n      />\n    </svg>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { computed } from \"vue\";\nimport type { LayerInfo } from \"../types/api\";\n\ninterface Props {\n  type: LayerInfo[\"type\"];\n  size?: \"sm\" | \"md\" | \"lg\";\n}\n\nconst props = withDefaults(defineProps<Props>(), {\n  size: \"md\",\n});\n\nconst iconClasses = computed(() => {\n  const baseClasses = \"flex-shrink-0 rounded\";\n\n  const sizeClasses = {\n    sm: \"w-6 h-6 p-1\",\n    md: \"w-8 h-8 p-1.5\",\n    lg: \"w-10 h-10 p-2\",\n  };\n\n  const colorClasses = {\n    shape: \"text-blue-500 bg-blue-50\",\n    text: \"text-green-500 bg-green-50\",\n    group: \"text-purple-500 bg-purple-50\",\n    path: \"text-orange-500 bg-orange-50\",\n  };\n\n  return [\n    baseClasses,\n    sizeClasses[props.size],\n    colorClasses[props.type] || \"text-gray-500 bg-gray-50\",\n  ].join(\" \");\n});\n</script>\n","<template>\n  <div class=\"layer-tree-node\">\n    <div\n      :class=\"[\n        'flex items-center space-x-2 p-2 rounded-lg transition-colors cursor-pointer',\n        selectedLayer === layer.id\n          ? 'bg-blue-50 border border-blue-200'\n          : 'hover:bg-gray-50',\n      ]\"\n      :style=\"{ paddingLeft: `${depth * 20 + 8}px` }\"\n      @click=\"selectLayer(layer.id)\"\n    >\n      <!-- Expand/Collapse Button -->\n      <button\n        v-if=\"hasChildren\"\n        @click.stop=\"toggleExpand(layer.id)\"\n        class=\"flex-shrink-0 p-0.5 text-gray-400 hover:text-gray-600 transition-colors\"\n      >\n        <svg\n          :class=\"[\n            'w-4 h-4 transition-transform',\n            isExpanded ? 'rotate-90' : '',\n          ]\"\n          fill=\"none\"\n          stroke=\"currentColor\"\n          viewBox=\"0 0 24 24\"\n        >\n          <path\n            stroke-linecap=\"round\"\n            stroke-linejoin=\"round\"\n            stroke-width=\"2\"\n            d=\"M9 5l7 7-7 7\"\n          />\n        </svg>\n      </button>\n\n      <!-- Spacer for non-expandable items -->\n      <div v-else class=\"w-5 flex-shrink-0\"></div>\n\n      <!-- Layer Icon -->\n      <div class=\"flex-shrink-0\">\n        <LayerIcon :type=\"layer.type\" />\n      </div>\n\n      <!-- Layer Info -->\n      <div class=\"flex-1 min-w-0\">\n        <div class=\"flex items-center justify-between\">\n          <p class=\"text-sm font-medium text-gray-900 truncate\">\n            {{ layer.label }}\n          </p>\n          <span class=\"text-xs text-gray-500 capitalize ml-2\">{{\n            layer.type\n          }}</span>\n        </div>\n        <p v-if=\"showDetails\" class=\"text-xs text-gray-500 font-mono truncate\">\n          {{ layer.id }}\n        </p>\n      </div>\n\n      <!-- Actions -->\n      <div class=\"flex-shrink-0 flex items-center space-x-1\">\n        <button\n          @click.stop=\"copyId(layer.id)\"\n          class=\"p-1 text-gray-400 hover:text-gray-600 transition-colors\"\n          title=\"Copy ID\"\n        >\n          <svg\n            class=\"w-3 h-3\"\n            fill=\"none\"\n            stroke=\"currentColor\"\n            viewBox=\"0 0 24 24\"\n          >\n            <path\n              stroke-linecap=\"round\"\n              stroke-linejoin=\"round\"\n              stroke-width=\"2\"\n              d=\"M8 16H6a2 2 0 01-2-2V6a2 2 0 012-2h8a2 2 0 012 2v2m-6 12h8a2 2 0 002-2v-8a2 2 0 00-2-2h-8a2 2 0 00-2 2v8a2 2 0 002 2z\"\n            />\n          </svg>\n        </button>\n      </div>\n    </div>\n\n    <!-- Children -->\n    <div v-if=\"hasChildren && isExpanded\" class=\"mt-1\">\n      <LayerTreeNode\n        v-for=\"child in children\"\n        :key=\"child.id\"\n        :layer=\"child\"\n        :all-layers=\"allLayers\"\n        :expanded-layers=\"expandedLayers\"\n        :selected-layer=\"selectedLayer\"\n        :show-details=\"showDetails\"\n        :depth=\"depth + 1\"\n        @toggle-expand=\"$emit('toggleExpand', $event)\"\n        @select-layer=\"$emit('selectLayer', $event)\"\n        @copy-id=\"$emit('copyId', $event)\"\n      />\n    </div>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { computed } from \"vue\";\nimport type { LayerInfo } from \"../types/api\";\nimport LayerIcon from \"./LayerIcon.vue\";\n\ninterface Props {\n  layer: LayerInfo;\n  allLayers: LayerInfo[];\n  expandedLayers: Set<string>;\n  selectedLayer: string | null;\n  showDetails?: boolean;\n  depth?: number;\n}\n\ninterface Emits {\n  (e: \"toggleExpand\", layerId: string): void;\n  (e: \"selectLayer\", layerId: string): void;\n  (e: \"copyId\", layerId: string): void;\n}\n\nconst props = withDefaults(defineProps<Props>(), {\n  showDetails: true,\n  depth: 0,\n});\n\nconst emit = defineEmits<Emits>();\n\n// Computed properties\nconst children = computed(() => {\n  // In a real implementation, you would parse the SVG structure to determine parent-child relationships\n  // For now, we'll assume groups might have children based on naming conventions or other heuristics\n  if (props.layer.type !== \"group\") return [];\n\n  // This is a simplified example - in practice you'd need to parse the actual SVG structure\n  return props.allLayers.filter(\n    (l) =>\n      l.id !== props.layer.id &&\n      l.id.startsWith(props.layer.id.replace(\"-group\", \"\")) &&\n      l.id !== props.layer.id\n  );\n});\n\nconst hasChildren = computed(() => children.value.length > 0);\n\nconst isExpanded = computed(() => props.expandedLayers.has(props.layer.id));\n\n// Methods\nconst toggleExpand = (layerId: string) => {\n  emit(\"toggleExpand\", layerId);\n};\n\nconst selectLayer = (layerId: string) => {\n  emit(\"selectLayer\", layerId);\n};\n\nconst copyId = (layerId: string) => {\n  emit(\"copyId\", layerId);\n};\n</script>\n","<template>\n  <div class=\"bg-white rounded-lg shadow-sm border border-gray-200\">\n    <!-- Header -->\n    <div class=\"flex items-center justify-between p-4 border-b border-gray-200\">\n      <h3 class=\"text-lg font-medium text-gray-900\">{{ title }}</h3>\n\n      <div class=\"flex items-center space-x-2\">\n        <!-- View Toggle -->\n        <div class=\"flex bg-gray-100 rounded-md p-1\">\n          <button\n            @click=\"viewMode = 'tree'\"\n            :class=\"[\n              'px-3 py-1 text-sm font-medium rounded transition-colors',\n              viewMode === 'tree'\n                ? 'bg-white text-gray-900 shadow-sm'\n                : 'text-gray-600 hover:text-gray-900',\n            ]\"\n          >\n            Tree\n          </button>\n          <button\n            @click=\"viewMode = 'list'\"\n            :class=\"[\n              'px-3 py-1 text-sm font-medium rounded transition-colors',\n              viewMode === 'list'\n                ? 'bg-white text-gray-900 shadow-sm'\n                : 'text-gray-600 hover:text-gray-900',\n            ]\"\n          >\n            List\n          </button>\n        </div>\n\n        <!-- Expand/Collapse All -->\n        <button\n          v-if=\"viewMode === 'tree' && hasNestedLayers\"\n          @click=\"toggleAllExpanded\"\n          class=\"text-sm text-gray-600 hover:text-gray-900 transition-colors\"\n        >\n          {{ allExpanded ? \"Collapse All\" : \"Expand All\" }}\n        </button>\n      </div>\n    </div>\n\n    <!-- Content -->\n    <div class=\"p-4\">\n      <!-- Empty State -->\n      <div v-if=\"!layers || layers.length === 0\" class=\"text-center py-8\">\n        <svg\n          class=\"mx-auto h-12 w-12 text-gray-400 mb-4\"\n          fill=\"none\"\n          stroke=\"currentColor\"\n          viewBox=\"0 0 24 24\"\n        >\n          <path\n            stroke-linecap=\"round\"\n            stroke-linejoin=\"round\"\n            stroke-width=\"2\"\n            d=\"M19 11H5m14 0a2 2 0 012 2v6a2 2 0 01-2 2H5a2 2 0 01-2-2v-6a2 2 0 012-2m14 0V9a2 2 0 00-2-2M5 11V9a2 2 0 012-2m0 0V5a2 2 0 012-2h6a2 2 0 012 2v2M7 7h10\"\n          />\n        </svg>\n        <p class=\"text-sm text-gray-500\">{{ emptyStateText }}</p>\n      </div>\n\n      <!-- Tree View -->\n      <div v-else-if=\"viewMode === 'tree'\" class=\"space-y-1\">\n        <LayerTreeNode\n          v-for=\"layer in rootLayers\"\n          :key=\"layer.id\"\n          :layer=\"layer\"\n          :all-layers=\"layers\"\n          :expanded-layers=\"expandedLayers\"\n          :selected-layer=\"selectedLayer\"\n          :show-details=\"showDetails\"\n          @toggle-expand=\"toggleExpand\"\n          @select-layer=\"selectLayer\"\n          @copy-id=\"copyLayerId\"\n        />\n      </div>\n\n      <!-- List View -->\n      <div v-else class=\"space-y-2\">\n        <div\n          v-for=\"layer in layers\"\n          :key=\"layer.id\"\n          :class=\"[\n            'flex items-center space-x-3 p-3 rounded-lg border transition-colors cursor-pointer',\n            selectedLayer === layer.id\n              ? 'border-blue-200 bg-blue-50'\n              : 'border-gray-200 hover:border-gray-300 hover:bg-gray-50',\n          ]\"\n          @click=\"selectLayer(layer.id)\"\n        >\n          <!-- Layer Type Icon -->\n          <div class=\"flex-shrink-0\">\n            <LayerIcon :type=\"layer.type\" />\n          </div>\n\n          <!-- Layer Info -->\n          <div class=\"flex-1 min-w-0\">\n            <div class=\"flex items-center justify-between\">\n              <p class=\"text-sm font-medium text-gray-900 truncate\">\n                {{ layer.label }}\n              </p>\n              <span class=\"text-xs text-gray-500 capitalize ml-2\">{{\n                layer.type\n              }}</span>\n            </div>\n            <p\n              v-if=\"showDetails\"\n              class=\"text-xs text-gray-500 font-mono truncate\"\n            >\n              {{ layer.id }}\n            </p>\n          </div>\n\n          <!-- Actions -->\n          <div class=\"flex-shrink-0 flex items-center space-x-1\">\n            <button\n              @click.stop=\"copyLayerId(layer.id)\"\n              class=\"p-1 text-gray-400 hover:text-gray-600 transition-colors\"\n              title=\"Copy ID\"\n            >\n              <svg\n                class=\"w-4 h-4\"\n                fill=\"none\"\n                stroke=\"currentColor\"\n                viewBox=\"0 0 24 24\"\n              >\n                <path\n                  stroke-linecap=\"round\"\n                  stroke-linejoin=\"round\"\n                  stroke-width=\"2\"\n                  d=\"M8 16H6a2 2 0 01-2-2V6a2 2 0 012-2h8a2 2 0 012 2v2m-6 12h8a2 2 0 002-2v-8a2 2 0 00-2-2h-8a2 2 0 00-2 2v8a2 2 0 002 2z\"\n                />\n              </svg>\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <!-- Footer with Layer Count -->\n    <div\n      v-if=\"layers && layers.length > 0\"\n      class=\"flex items-center justify-between p-4 border-t border-gray-200 bg-gray-50 text-sm text-gray-600\"\n    >\n      <div>\n        {{ layers.length }} layer{{ layers.length !== 1 ? \"s\" : \"\" }} total\n      </div>\n\n      <div class=\"flex items-center space-x-4\">\n        <span v-if=\"layerStats.shapes > 0\">{{ layerStats.shapes }} shapes</span>\n        <span v-if=\"layerStats.groups > 0\">{{ layerStats.groups }} groups</span>\n        <span v-if=\"layerStats.text > 0\">{{ layerStats.text }} text</span>\n        <span v-if=\"layerStats.paths > 0\">{{ layerStats.paths }} paths</span>\n      </div>\n    </div>\n\n    <!-- Copy Notification -->\n    <div\n      v-if=\"showCopyNotification\"\n      class=\"fixed bottom-4 right-4 bg-green-600 text-white px-4 py-2 rounded-lg shadow-lg z-50 transition-opacity duration-300\"\n    >\n      Layer ID copied to clipboard!\n    </div>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { ref, computed } from \"vue\";\nimport type { LayerInfo } from \"../types/api\";\nimport { copyToClipboard } from \"../utils/clipboard\";\nimport LayerTreeNode from \"./LayerTreeNode.vue\";\nimport LayerIcon from \"./LayerIcon.vue\";\n\ninterface Props {\n  layers?: LayerInfo[];\n  title?: string;\n  emptyStateText?: string;\n  showDetails?: boolean;\n  defaultExpanded?: boolean;\n}\n\ninterface Emits {\n  (e: \"selectLayer\", layerId: string): void;\n  (e: \"copyId\", layerId: string): void;\n}\n\nconst props = withDefaults(defineProps<Props>(), {\n  title: \"Layer Inspector\",\n  emptyStateText: \"No layers to inspect\",\n  showDetails: true,\n  defaultExpanded: false,\n});\n\nconst emit = defineEmits<Emits>();\n\n// State\nconst viewMode = ref<\"tree\" | \"list\">(\"tree\");\nconst expandedLayers = ref<Set<string>>(new Set());\nconst selectedLayer = ref<string | null>(null);\nconst allExpanded = ref(props.defaultExpanded);\nconst showCopyNotification = ref(false);\n\n// Computed properties\nconst rootLayers = computed(() => {\n  if (!props.layers) return [];\n\n  // For now, treat all layers as root layers\n  // In a more complex implementation, you might parse parent-child relationships\n  return props.layers;\n});\n\nconst hasNestedLayers = computed(() => {\n  // Check if any layers have children (for tree view)\n  return props.layers?.some((layer) => layer.type === \"group\") || false;\n});\n\nconst layerStats = computed(() => {\n  if (!props.layers) return { shapes: 0, groups: 0, text: 0, paths: 0 };\n\n  return props.layers.reduce(\n    (stats, layer) => {\n      switch (layer.type) {\n        case \"shape\":\n          stats.shapes++;\n          break;\n        case \"group\":\n          stats.groups++;\n          break;\n        case \"text\":\n          stats.text++;\n          break;\n        case \"path\":\n          stats.paths++;\n          break;\n      }\n      return stats;\n    },\n    { shapes: 0, groups: 0, text: 0, paths: 0 }\n  );\n});\n\n// Methods\nconst toggleExpand = (layerId: string) => {\n  if (expandedLayers.value.has(layerId)) {\n    expandedLayers.value.delete(layerId);\n  } else {\n    expandedLayers.value.add(layerId);\n  }\n};\n\nconst toggleAllExpanded = () => {\n  if (allExpanded.value) {\n    expandedLayers.value.clear();\n  } else {\n    props.layers?.forEach((layer) => {\n      if (layer.type === \"group\") {\n        expandedLayers.value.add(layer.id);\n      }\n    });\n  }\n  allExpanded.value = !allExpanded.value;\n};\n\nconst selectLayer = (layerId: string) => {\n  selectedLayer.value = layerId;\n  emit(\"selectLayer\", layerId);\n};\n\nconst copyLayerId = async (layerId: string) => {\n  try {\n    await copyToClipboard(layerId);\n    showCopyNotification.value = true;\n    emit(\"copyId\", layerId);\n\n    setTimeout(() => {\n      showCopyNotification.value = false;\n    }, 2000);\n  } catch (error) {\n    console.error(\"Failed to copy layer ID:\", error);\n  }\n};\n</script>\n","import { createApp } from \"vue\";\nimport \"./style.css\";\nimport App from \"./App.vue\";\n\n// Create Vue app with error handling\nconst app = createApp(App);\n\n// Global error handler\napp.config.errorHandler = (err, _instance, info) => {\n  console.error(\"Vue error:\", err, info);\n  // In production, you might want to send this to an error reporting service\n};\n\n// Global warning handler (development only)\nif (import.meta.env?.DEV) {\n  app.config.warnHandler = (msg, _instance, trace) => {\n    console.warn(\"Vue warning:\", msg, trace);\n  };\n}\n\napp.mount(\"#app\");\n","<template>\n  <div class=\"min-h-screen bg-gray-50\">\n    <!-- Header -->\n    <header class=\"bg-white shadow-sm border-b border-gray-200\">\n      <div class=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n        <div class=\"flex justify-between items-center h-16\">\n          <div class=\"flex items-center\">\n            <h1 class=\"text-xl font-semibold text-gray-900\">\n              SVG AI Generator\n            </h1>\n          </div>\n          <div class=\"flex items-center space-x-4\">\n            <div class=\"text-sm text-gray-500\">\n              AI-powered SVG generation with live preview\n            </div>\n            <div class=\"flex items-center space-x-2\">\n              <div\n                :class=\"[\n                  'w-2 h-2 rounded-full',\n                  isOnline ? 'bg-green-400' : 'bg-red-400',\n                ]\"\n              ></div>\n              <span class=\"text-xs text-gray-500\">\n                {{ isOnline ? \"Online\" : \"Offline\" }}\n              </span>\n            </div>\n          </div>\n        </div>\n      </div>\n    </header>\n\n    <!-- Main Content -->\n    <main class=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\n      <!-- Offline Status -->\n      <div v-if=\"!isOnline\" class=\"mb-6\">\n        <div class=\"bg-yellow-50 border border-yellow-200 rounded-md p-4\">\n          <div class=\"flex\">\n            <div class=\"flex-shrink-0\">\n              <svg\n                class=\"h-5 w-5 text-yellow-400\"\n                viewBox=\"0 0 20 20\"\n                fill=\"currentColor\"\n              >\n                <path\n                  fill-rule=\"evenodd\"\n                  d=\"M8.257 3.099c.765-1.36 2.722-1.36 3.486 0l5.58 9.92c.75 1.334-.213 2.98-1.742 2.98H4.42c-1.53 0-2.493-1.646-1.743-2.98l5.58-9.92zM11 13a1 1 0 11-2 0 1 1 0 012 0zm-1-8a1 1 0 00-1 1v3a1 1 0 002 0V6a1 1 0 00-1-1z\"\n                  clip-rule=\"evenodd\"\n                />\n              </svg>\n            </div>\n            <div class=\"ml-3\">\n              <h3 class=\"text-sm font-medium text-yellow-800\">Offline</h3>\n              <div class=\"mt-2 text-sm text-yellow-700\">\n                You're currently offline. SVG generation requires an internet\n                connection.\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <!-- Error Messages -->\n      <div v-if=\"error || globalError\" class=\"mb-6\">\n        <div class=\"bg-red-50 border border-red-200 rounded-md p-4\">\n          <div class=\"flex\">\n            <div class=\"flex-shrink-0\">\n              <svg\n                class=\"h-5 w-5 text-red-400\"\n                viewBox=\"0 0 20 20\"\n                fill=\"currentColor\"\n              >\n                <path\n                  fill-rule=\"evenodd\"\n                  d=\"M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z\"\n                  clip-rule=\"evenodd\"\n                />\n              </svg>\n            </div>\n            <div class=\"ml-3\">\n              <h3 class=\"text-sm font-medium text-red-800\">\n                {{ error ? \"Generation Error\" : \"Application Error\" }}\n              </h3>\n              <div class=\"mt-2 text-sm text-red-700\">\n                {{ error || globalError }}\n              </div>\n              <div class=\"mt-4 space-x-2\">\n                <button\n                  v-if=\"error\"\n                  @click=\"clearError\"\n                  class=\"bg-red-100 px-2 py-1 text-xs font-medium text-red-800 rounded hover:bg-red-200\"\n                >\n                  Dismiss\n                </button>\n                <button\n                  v-if=\"globalError\"\n                  @click=\"clearGlobalError\"\n                  class=\"bg-red-100 px-2 py-1 text-xs font-medium text-red-800 rounded hover:bg-red-200\"\n                >\n                  Dismiss\n                </button>\n                <button\n                  v-if=\"canRetry\"\n                  @click=\"retryGeneration\"\n                  class=\"bg-red-100 px-2 py-1 text-xs font-medium text-red-800 rounded hover:bg-red-200\"\n                >\n                  Retry\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <!-- Application Layout -->\n      <div class=\"grid grid-cols-1 lg:grid-cols-2 gap-8\">\n        <!-- Left Panel - Input Controls -->\n        <div class=\"space-y-6\">\n          <div class=\"bg-white rounded-lg shadow p-6\">\n            <h2 class=\"text-lg font-medium text-gray-900 mb-4\">Generate SVG</h2>\n\n            <!-- Prompt Input Section -->\n            <div class=\"space-y-4\">\n              <div>\n                <label\n                  for=\"prompt\"\n                  class=\"block text-sm font-medium text-gray-700 mb-2\"\n                >\n                  Describe your SVG\n                </label>\n                <textarea\n                  id=\"prompt\"\n                  v-model=\"generationParams.prompt\"\n                  rows=\"3\"\n                  class=\"w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500\"\n                  placeholder=\"e.g., A blue circle with a red border, or a simple house icon\"\n                  :maxlength=\"500\"\n                />\n                <div class=\"mt-1 text-xs text-gray-500\">\n                  {{ generationParams.prompt.length }}/500 characters\n                </div>\n              </div>\n\n              <!-- Size Controls -->\n              <div>\n                <label class=\"block text-sm font-medium text-gray-700 mb-2\">\n                  Size\n                </label>\n                <div class=\"grid grid-cols-2 sm:grid-cols-4 gap-2 mb-3\">\n                  <button\n                    v-for=\"preset in sizePresets\"\n                    :key=\"preset.name\"\n                    @click=\"setSizePreset(preset)\"\n                    :class=\"[\n                      'px-3 py-2 text-xs font-medium rounded border',\n                      generationParams.size.preset === preset.name\n                        ? 'bg-blue-50 border-blue-200 text-blue-700'\n                        : 'bg-white border-gray-300 text-gray-700 hover:bg-gray-50',\n                    ]\"\n                  >\n                    {{ preset.label }}\n                  </button>\n                </div>\n\n                <div\n                  v-if=\"generationParams.size.preset === 'custom'\"\n                  class=\"grid grid-cols-2 gap-3\"\n                >\n                  <div>\n                    <label class=\"block text-xs font-medium text-gray-700 mb-1\"\n                      >Width</label\n                    >\n                    <input\n                      v-model.number=\"generationParams.size.width\"\n                      type=\"number\"\n                      min=\"16\"\n                      max=\"2048\"\n                      class=\"w-full px-2 py-1 text-sm border border-gray-300 rounded focus:outline-none focus:ring-blue-500 focus:border-blue-500\"\n                    />\n                  </div>\n                  <div>\n                    <label class=\"block text-xs font-medium text-gray-700 mb-1\"\n                      >Height</label\n                    >\n                    <input\n                      v-model.number=\"generationParams.size.height\"\n                      type=\"number\"\n                      min=\"16\"\n                      max=\"2048\"\n                      class=\"w-full px-2 py-1 text-sm border border-gray-300 rounded focus:outline-none focus:ring-blue-500 focus:border-blue-500\"\n                    />\n                  </div>\n                </div>\n              </div>\n\n              <!-- Generate Button -->\n              <button\n                @click=\"generateSVG\"\n                :disabled=\"!canGenerate || isGenerating\"\n                class=\"w-full bg-blue-600 text-white py-2 px-4 rounded-md hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 disabled:opacity-50 disabled:cursor-not-allowed\"\n              >\n                <span\n                  v-if=\"isGenerating\"\n                  class=\"flex items-center justify-center\"\n                >\n                  <svg\n                    class=\"animate-spin -ml-1 mr-3 h-5 w-5 text-white\"\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                    fill=\"none\"\n                    viewBox=\"0 0 24 24\"\n                  >\n                    <circle\n                      class=\"opacity-25\"\n                      cx=\"12\"\n                      cy=\"12\"\n                      r=\"10\"\n                      stroke=\"currentColor\"\n                      stroke-width=\"4\"\n                    ></circle>\n                    <path\n                      class=\"opacity-75\"\n                      fill=\"currentColor\"\n                      d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"\n                    ></path>\n                  </svg>\n                  Generating...\n                </span>\n                <span v-else>Generate SVG</span>\n              </button>\n            </div>\n          </div>\n        </div>\n\n        <!-- Right Panel - Preview and Output -->\n        <div class=\"space-y-6\">\n          <!-- SVG Preview -->\n          <SVGPreview\n            :svg-content=\"generationResult?.svg || ''\"\n            :metadata=\"generationResult?.meta\"\n            :loading=\"isGenerating\"\n            :error=\"error || undefined\"\n            @copy=\"handleCopy\"\n            @download=\"handleDownload\"\n          />\n\n          <!-- Code Output -->\n          <CodeOutput\n            v-if=\"generationResult?.svg\"\n            :svg-code=\"generationResult.svg\"\n            title=\"SVG Code\"\n            :show-format-selector=\"true\"\n            :show-download-button=\"true\"\n            :show-footer=\"true\"\n            :filename=\"getFilename()\"\n            @copy=\"handleCodeCopy\"\n            @download=\"handleCodeDownload\"\n            @format-change=\"handleFormatChange\"\n            @error=\"handleCodeError\"\n          />\n\n          <!-- Metadata Display -->\n          <MetadataDisplay\n            v-if=\"generationResult?.meta\"\n            :metadata=\"generationResult.meta\"\n            :layers=\"generationResult.layers\"\n            :statistics=\"svgStatistics || undefined\"\n            title=\"SVG Information\"\n            :collapsible=\"true\"\n            :show-statistics=\"true\"\n          />\n\n          <!-- Layer Inspector -->\n          <LayerInspector\n            v-if=\"\n              generationResult?.layers && generationResult.layers.length > 0\n            \"\n            :layers=\"generationResult.layers\"\n            title=\"Layer Inspector\"\n            :show-details=\"true\"\n            :default-expanded=\"false\"\n            @select-layer=\"handleLayerSelect\"\n            @copy-id=\"handleLayerIdCopy\"\n          />\n\n          <!-- Warnings Display -->\n          <div\n            v-if=\"\n              generationResult?.warnings && generationResult.warnings.length > 0\n            \"\n            class=\"bg-yellow-50 border border-yellow-200 rounded-lg p-4\"\n          >\n            <div class=\"flex\">\n              <div class=\"flex-shrink-0\">\n                <svg\n                  class=\"h-5 w-5 text-yellow-400\"\n                  viewBox=\"0 0 20 20\"\n                  fill=\"currentColor\"\n                >\n                  <path\n                    fill-rule=\"evenodd\"\n                    d=\"M8.257 3.099c.765-1.36 2.722-1.36 3.486 0l5.58 9.92c.75 1.334-.213 2.98-1.742 2.98H4.42c-1.53 0-2.493-1.646-1.743-2.98l5.58-9.92zM11 13a1 1 0 11-2 0 1 1 0 012 0zm-1-8a1 1 0 00-1 1v3a1 1 0 002 0V6a1 1 0 00-1-1z\"\n                    clip-rule=\"evenodd\"\n                  />\n                </svg>\n              </div>\n              <div class=\"ml-3\">\n                <h3 class=\"text-sm font-medium text-yellow-800\">Warnings</h3>\n                <div class=\"mt-2 text-sm text-yellow-700\">\n                  <ul class=\"list-disc list-inside space-y-1\">\n                    <li\n                      v-for=\"warning in generationResult.warnings\"\n                      :key=\"warning\"\n                    >\n                      {{ warning }}\n                    </li>\n                  </ul>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <!-- Empty State -->\n          <div\n            v-if=\"!generationResult && !isGenerating\"\n            class=\"bg-white rounded-lg shadow p-6\"\n          >\n            <div class=\"text-center text-gray-500 py-12\">\n              <svg\n                class=\"mx-auto h-12 w-12 text-gray-400\"\n                stroke=\"currentColor\"\n                fill=\"none\"\n                viewBox=\"0 0 48 48\"\n              >\n                <path\n                  d=\"M28 8H12a4 4 0 00-4 4v20m32-12v8m0 0v8a4 4 0 01-4 4H12a4 4 0 01-4-4v-4m32-4l-3.172-3.172a4 4 0 00-5.656 0L28 28M8 32l9.172-9.172a4 4 0 015.656 0L28 28m0 0l4 4m4-24h8m-4-4v8m-12 4h.02\"\n                  stroke-width=\"2\"\n                  stroke-linecap=\"round\"\n                  stroke-linejoin=\"round\"\n                />\n              </svg>\n              <p class=\"mt-2\">\n                Enter a prompt and click \"Generate SVG\" to see your creation\n              </p>\n            </div>\n          </div>\n        </div>\n      </div>\n    </main>\n\n    <!-- Footer -->\n    <footer class=\"bg-white border-t border-gray-200 mt-12\">\n      <div class=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-4\">\n        <p class=\"text-center text-sm text-gray-500\">\n          ⚠️ All generated SVGs are automatically sanitized for security. Only\n          safe elements and attributes are included.\n        </p>\n      </div>\n    </footer>\n\n    <!-- Toast Notifications -->\n    <ToastContainer />\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { ref, computed } from \"vue\";\nimport { useGeneration } from \"./composables/useGeneration\";\nimport { useErrorHandler } from \"./composables/useErrorHandler\";\nimport ToastContainer from \"./components/ToastContainer.vue\";\nimport SVGPreview from \"./components/SVGPreview.vue\";\nimport CodeOutput from \"./components/CodeOutput.vue\";\nimport MetadataDisplay from \"./components/MetadataDisplay.vue\";\nimport LayerInspector from \"./components/LayerInspector.vue\";\n\n// Use generation composable\nconst {\n  generationParams,\n  generationResult,\n  sizePresets,\n  isGenerating,\n  error,\n  isOnline,\n  canRetry,\n  canGenerate,\n  setSizePreset,\n  generateSVG,\n  retryGeneration,\n  clearError,\n} = useGeneration();\n\nconst errorHandler = useErrorHandler();\nconst globalError = ref<string | null>(null);\nconst selectedLayer = ref<string | null>(null);\nconst currentFormat = ref<string>(\"svg\");\n\n// Computed properties\nconst svgStatistics = computed(() => {\n  if (!generationResult.value?.layers) return null;\n\n  const layers = generationResult.value.layers;\n  const elementCount = layers.length;\n  const hasGroups = layers.some((layer) => layer.type === \"group\");\n  const hasText = layers.some((layer) => layer.type === \"text\");\n  const colorCount = generationResult.value.meta?.palette?.length || 0;\n\n  let complexity: \"simple\" | \"moderate\" | \"complex\" = \"simple\";\n  if (elementCount > 10 || hasGroups) complexity = \"moderate\";\n  if (elementCount > 20 || (hasGroups && hasText)) complexity = \"complex\";\n\n  return {\n    elementCount,\n    hasGroups,\n    hasText,\n    colorCount,\n    complexity,\n  };\n});\n\n// Methods\nconst getFilename = (): string => {\n  const timestamp = new Date().toISOString().slice(0, 19).replace(/[:-]/g, \"\");\n  return `svg-ai-${timestamp}`;\n};\n\nconst handleCopy = () => {\n  errorHandler.showSuccess(\"Copied!\", \"SVG copied to clipboard\");\n};\n\nconst handleDownload = () => {\n  errorHandler.showSuccess(\"Downloaded!\", \"SVG file downloaded successfully\");\n};\n\nconst handleCodeCopy = (_code: string, format: string) => {\n  errorHandler.showSuccess(\n    \"Copied!\",\n    `${format.toUpperCase()} code copied to clipboard`\n  );\n};\n\nconst handleCodeDownload = (\n  _code: string,\n  _format: string,\n  filename: string\n) => {\n  errorHandler.showSuccess(\n    \"Downloaded!\",\n    `${filename} downloaded successfully`\n  );\n};\n\nconst handleFormatChange = (format: string) => {\n  currentFormat.value = format;\n};\n\nconst handleCodeError = (error: string) => {\n  errorHandler.showError(\"Error\", error);\n};\n\nconst handleLayerSelect = (layerId: string) => {\n  selectedLayer.value = layerId;\n  // Could highlight the layer in the preview here\n};\n\nconst handleLayerIdCopy = (layerId: string) => {\n  errorHandler.showSuccess(\n    \"Copied!\",\n    `Layer ID \"${layerId}\" copied to clipboard`\n  );\n};\n\nconst clearGlobalError = () => {\n  globalError.value = null;\n};\n\n// Global error handler\nwindow.addEventListener(\"error\", (event) => {\n  const error = event.error || new Error(\"Unknown error\");\n  errorHandler.handleUnexpectedError(error, {\n    component: \"App\",\n    action: \"global_error_handler\",\n  });\n});\n\nwindow.addEventListener(\"unhandledrejection\", (event) => {\n  const error =\n    event.reason instanceof Error\n      ? event.reason\n      : new Error(event.reason?.message || \"Unknown error\");\n  errorHandler.handleUnexpectedError(error, {\n    component: \"App\",\n    action: \"unhandled_rejection\",\n  });\n});\n</script>\n"],"names":["APIError","Error","constructor","message","statusCode","response","super","this","name","NetworkError","TimeoutError","apiService","baseURL","__publicField","maxRetries","baseDelay","maxDelay","retryCondition","error","navigator","onLine","setupOnlineDetection","window","addEventListener","isOnline","addRequestInterceptor","interceptor","requestInterceptors","push","addResponseInterceptor","responseInterceptors","setRetryConfig","config","retryConfig","applyRequestInterceptors","request","processedRequest","applyResponseInterceptors","processedResponse","sleep","ms","Promise","resolve","setTimeout","calculateDelay","attempt","delay","Math","pow","min","fetchWithTimeout","url","options","timeout","controller","AbortController","timeoutId","abort","fetch","signal","clearTimeout","makeRequest","processedOptions","lastError","String","_b","_a","TypeError","includes","generateSVG","method","headers","body","JSON","stringify","ok","errorData","json","catch","status","statusText","healthCheck","isOffline","checkConnection","useErrorHandler","toast","useToast","logError","context","stack","Date","toISOString","handleAPIError","actions","label","action","style","warning","handleValidationErrors","errors","map","e","join","length","handleGenerationError","generationErrors","handleCopyError","handleUnexpectedError","location","reload","showSuccess","title","success","showWarning","showInfo","info","showError","useGeneration","api","errorHandler","state","ref","loading","lastResponse","updateOnlineStatus","value","async","component","metadata","clearError","isLoading","computed","hasError","errorMessage","canRetry","_c","checkHealth","retry","useApi","validation","fields","reactive","isSubmitting","submitAttempted","isFormValid","Object","values","every","field","isValid","hasErrors","some","isTouched","errorCount","filter","fieldErrors","entries","forEach","fieldName","validationErrors","_","code","allErrors","registerField","initialState","isDirty","updateFieldValidation","touchField","markFieldDirty","resetField","shouldShowError","resetForm","keys","validateForm","setSubmitting","submitting","getFieldState","getFieldError","createValidationHandler","createTouchHandler","createInputHandler","validateFields","rules","rule","useFormValidation","generationParams","prompt","size","preset","width","height","generationResult","canGenerate","trim","debouncedSanitization","debounce","newPrompt","performanceMonitor","start","sanitizationResult","InputSanitizer","sanitizePrompt","wasModified","sanitized","warnings","isSuspiciousInput","end","watch","sizePresets","isGenerating","setSizePreset","promptLength","widthResult","sanitizeNumber","heightResult","validateInput","palette","seed","result","retryGeneration","clearResult","resetParams","props","__props","emit","__emit","previewContainer","svgContainer","svgWrapper","zoomLevel","panX","panY","isPanning","panStartX","panStartY","isFullscreen","sanitizedSvgContent","svgContent","replace","svgDimensions","containerStyle","transform","svgWrapperStyle","maxWidth","maxHeight","zoomIn","maxZoom","zoomStep","zoomOut","minZoom","max","resetZoom","toggleFullscreen","document","overflow","startPanning","event","enablePanning","clientX","clientY","preventDefault","handlePanning","stopPanning","handleWheel","enableWheelZoom","delta","deltaY","newZoom","handleKeydown","key","onMounted","onUnmounted","removeEventListener","_openBlock","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_hoisted_3","_toDisplayString","_hoisted_4","showZoomControls","_hoisted_5","onClick","disabled","class","fill","stroke","viewBox","d","_hoisted_7","round","showFullscreenButton","_hoisted_10","_cache","_hoisted_9","_normalizeClass","_hoisted_11","_hoisted_12","xmlns","cx","cy","r","_hoisted_13","loadingText","_hoisted_14","_hoisted_15","_hoisted_16","showRetryButton","$emit","onMousedown","onMousemove","onMouseup","onMouseleave","onWheel","showBorder","backgroundColor","innerHTML","_hoisted_17","_hoisted_18","_hoisted_19","emptyStateText","showOverlayInfo","_hoisted_21","showFooter","_hoisted_22","_hoisted_23","_hoisted_24","_hoisted_25","_renderSlot","_ctx","$slots","ClipboardError","copyToClipboard","text","clipboard","isSecureContext","writeText","textArea","createElement","position","left","top","appendChild","focus","select","successful","execCommand","removeChild","selectedFormat","isCopying","copySuccess","processedCode","svgCode","optimizeSVG","minifySVG","highlightedCode","highlightSVG","lineCount","split","characterCount","fileSize","bytes","Blob","toFixed","copyButtonText","newFormat","copyCode","downloadSVG","blob","type","URL","createObjectURL","link","href","download","getFilename","click","revokeObjectURL","filename","svg","showFormatSelector","$event","_hoisted_8","_hoisted_6","_createTextVNode","showDownloadButton","showLineNumbers","_Fragment","_renderList","n","_hoisted_20","optimizationInfo","originalSize","optimizedSize","savings","isCollapsed","showAllLayers","showCopyNotification","aspectRatio","gcd","a","b","divisor","ratioW","ratioH","displayedLayers","layers","maxLayersShown","slice","collapsible","_normalizeStyle","color","index","_hoisted_26","copyColor","_hoisted_28","_hoisted_29","_hoisted_30","_hoisted_31","layer","id","_hoisted_32","_hoisted_33","_hoisted_34","_hoisted_35","_hoisted_36","_hoisted_37","_hoisted_38","_hoisted_39","_hoisted_40","_hoisted_41","showStatistics","statistics","_hoisted_42","_hoisted_43","_hoisted_44","_hoisted_45","_hoisted_46","elementCount","_hoisted_47","_hoisted_48","hasGroups","_hoisted_49","_hoisted_50","_hoisted_51","hasText","_hoisted_52","complexity","description","_hoisted_53","_hoisted_54","default","_hoisted_55","_hoisted_56","iconClasses","sm","md","lg","shape","group","path","children","allLayers","l","startsWith","hasChildren","isExpanded","expandedLayers","has","selectedLayer","depth","selectLayer","layerId","_withModifiers","toggleExpand","_createVNode","LayerIcon","showDetails","copyId","child","_createBlock","_component_LayerTreeNode","onToggleExpand","onSelectLayer","onCopyId","viewMode","Set","allExpanded","defaultExpanded","rootLayers","hasNestedLayers","layerStats","reduce","stats","shapes","groups","paths","delete","add","toggleAllExpanded","clear","copyLayerId","LayerTreeNode","app","createApp","globalError","currentFormat","svgStatistics","colorCount","meta","handleCopy","handleDownload","handleCodeCopy","_code","format","toUpperCase","handleCodeDownload","_format","handleFormatChange","handleCodeError","handleLayerSelect","handleLayerIdCopy","clearGlobalError","reason","_unref","args","for","rows","placeholder","maxlength","_vModelText","number","SVGPreview","onCopy","onDownload","CodeOutput","onFormatChange","onError","MetadataDisplay","LayerInspector","ToastContainer","err","_instance","mount"],"mappings":"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"}