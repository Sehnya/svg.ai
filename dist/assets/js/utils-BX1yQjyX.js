var t=Object.defineProperty,e=(e,i,s)=>((e,i,s)=>i in e?t(e,i,{enumerable:!0,configurable:!0,writable:!0,value:s}):e[i]=s)(e,"symbol"!=typeof i?i+"":i,s);class i{static sanitizeInput(t){if(!t||"string"!=typeof t)return{sanitized:"",wasModified:!1,warnings:[]};let e=t;const i=[];let s=!1;for(const r of this.DANGEROUS_PATTERNS)if(r.test(e)){e=e.replace(r,""),s=!0,i.push("Potentially unsafe content was removed from your input");break}const n=e.length;e=this.encodeHTMLEntities(e),e.length!==n&&(s=!0);const a=e.trim().replace(/\s+/g," ");return a!==e&&(e=a,s=!0),{sanitized:e,wasModified:s,warnings:i}}static sanitizePrompt(t){const e=this.sanitizeInput(t);e.sanitized.length>500&&(e.sanitized=e.sanitized.substring(0,500),e.wasModified=!0,e.warnings.push("Prompt was truncated to 500 characters"));const i=(e.sanitized.match(/[^a-zA-Z0-9\s.,!?-]/g)||[]).length,s=e.sanitized.length;return s>0&&i/s>.3&&e.warnings.push("Your prompt contains many special characters which may affect generation quality"),e}static sanitizeNumber(t,e,i,s){const n=[];let a,r=!1;"string"==typeof t?a=parseFloat(t):"number"==typeof t?a=t:(a=s,r=!0,n.push("Invalid number format, using default value")),!isNaN(a)&&isFinite(a)||(a=s,r=!0,n.push("Invalid number, using default value")),a<e?(a=e,r=!0,n.push(`Value was below minimum (${e}), adjusted to minimum`)):a>i&&(a=i,r=!0,n.push(`Value was above maximum (${i}), adjusted to maximum`));const o=Math.round(100*a)/100;return o!==a&&(a=o,r=!0),{value:a,wasModified:r,warnings:n}}static sanitizeColor(t){if(!t||"string"!=typeof t)return{sanitized:"#000000",wasModified:!0,warnings:["Invalid color format, using black"]};let e=t.trim().toLowerCase();const i=[];let s=!1;const n=this.sanitizeInput(e);if(e=n.sanitized,s=n.wasModified,i.push(...n.warnings),e.startsWith("#")){/^#([0-9a-f]{3}|[0-9a-f]{6})$/i.test(e)||(e="#000000",s=!0,i.push("Invalid hex color format, using black"))}else{["red","green","blue","yellow","orange","purple","pink","black","white","gray","grey","brown","cyan","magenta","lime","navy","maroon","olive","teal","silver","gold"].includes(e)||(e="#000000",s=!0,i.push("Unsupported color name, using black"))}return{sanitized:e,wasModified:s,warnings:i}}static encodeHTMLEntities(t){return t.replace(/[&<>"'\/]/g,t=>this.HTML_ENTITIES[t]||t)}static containsOnlySafeCharacters(t){return/^[a-zA-Z0-9\s.,!?;:()\-_+=\[\]{}'"@#$%^&*\/\\|`~]*$/.test(t)}static isSuspiciousInput(t){return!(!t||"string"!=typeof t)&&this.DANGEROUS_PATTERNS.some(e=>e.test(t))}}function s(t,e,i=!1){let s=null;return function(...n){const a=i&&!s;null!==s&&clearTimeout(s),s=setTimeout(()=>{s=null,i||t(...n)},e),a&&t(...n)}}e(i,"DANGEROUS_PATTERNS",[/<script[^>]*>.*?<\/script>/gi,/javascript:/gi,/vbscript:/gi,/on\w+\s*=/gi,/data:text\/html/gi,/data:application\/javascript/gi,/eval\s*\(/gi,/document\.cookie/gi,/window\.location/gi,/alert\s*\(/gi,/union\s+select/gi,/drop\s+table/gi,/delete\s+from/gi]),e(i,"HTML_ENTITIES",{"&":"&amp;","<":"&lt;",">":"&gt;",'"':"&quot;","'":"&#x27;","/":"&#x2F;"});const n=new class{constructor(){e(this,"metrics",[]),e(this,"activeTimers",new Map)}start(t,e){const i=performance.now();this.activeTimers.set(t,i),this.metrics.push({name:t,startTime:i,metadata:e})}end(t){const e=performance.now(),i=this.activeTimers.get(t);if(!i)return null;const s=e-i;this.activeTimers.delete(t);const n=this.metrics.find(e=>e.name===t&&!e.endTime);return n&&(n.endTime=e,n.duration=s),s}async time(t,e,i){this.start(t,i);try{const i=await e();return this.end(t),i}catch(s){throw this.end(t),s}}timeSync(t,e,i){this.start(t,i);try{const i=e();return this.end(t),i}catch(s){throw this.end(t),s}}getReport(){const t=this.metrics.filter(t=>void 0!==t.duration);if(0===t.length)return{metrics:[],summary:{totalOperations:0,averageDuration:0,slowestOperation:null,fastestOperation:null}};const e=t.map(t=>t.duration),i=e.reduce((t,e)=>t+e,0)/e.length,s=t.reduce((t,e)=>e.duration>t.duration?e:t),n=t.reduce((t,e)=>e.duration<t.duration?e:t);return{metrics:[...t],summary:{totalOperations:t.length,averageDuration:Math.round(100*i)/100,slowestOperation:s,fastestOperation:n}}}clear(){this.metrics=[],this.activeTimers.clear()}getMetricsFor(t){return this.metrics.filter(e=>e.name===t)}logReport(){const t=this.getReport();t.summary.slowestOperation,t.summary.fastestOperation}};export{i as I,s as d,n as p};
//# sourceMappingURL=utils-BX1yQjyX.js.map
